(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    197849,       4409]
NotebookOptionsPosition[    195460,       4356]
NotebookOutlinePosition[    196418,       4384]
CellTagsIndexPosition[    196375,       4381]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["dsp.m package", "Title",
 CellChangeTimes->{{3.710989530553841*^9, 3.710989530810143*^9}},
 TextAlignment->Center,ExpressionUUID->"1ca595f7-a740-41d1-8dfc-2047e2c71c21"],

Cell["\<\
==============================================================================\

This file is part of the 3D3A Mathematica Toolbox.
   
Contributing author(s), listed alphabetically by last name:
Rahulram Sridhar <rahulram@princeton.edu>
Joseph G. Tylka <josephgt@princeton.edu>
3D Audio and Applied Acoustics (3D3A) Laboratory
Princeton University, Princeton, New Jersey 08544, USA
   
MIT License
   
Copyright (c) 2021 Princeton University
   
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \
\[OpenCurlyDoubleQuote]Software\[CloseCurlyDoubleQuote]), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
   
The above copyright notice and this permission notice shall be included in \
all
copies or substantial portions of the Software.
   
THE SOFTWARE IS PROVIDED \[OpenCurlyDoubleQuote]AS \
IS\[CloseCurlyDoubleQuote], WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
==============================================================================\
\>", "Text",
 CellChangeTimes->{
  3.741092154980876*^9, {3.8343669731144457`*^9, 
   3.834366973873321*^9}},ExpressionUUID->"dca19e92-ab53-460e-aff2-\
921c62d34d07"],

Cell[CellGroupData[{

Cell["Begin the package", "Section",ExpressionUUID->"dd1159f4-99cf-44db-8353-e4b5d7a1890a"],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", 
  RowBox[{"\"\<dsp`\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<general`\>\"", ",", "\"\<math`\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6964764554807577`*^9, 3.6964764599256163`*^9}, {
  3.710989528225996*^9, 3.710989528435109*^9}, {3.8104640143836613`*^9, 
  3.810464016979322*^9}},ExpressionUUID->"71729209-1ef9-4b73-8904-\
8ce8c08cb755"],

Cell[CellGroupData[{

Cell["Usage messages for the public functions", "Subsection",ExpressionUUID->"73d3d877-ffce-4a6d-bbf8-2b74b9a419c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getButterworthFIR", "::", "usage"}], "=", 
   "\"\<getButterworthFIR[filtLen,filterOrder,Wn] returns an FIR \
approximation of a Butterworth low-pass filter. The length, in samples, of \
the FIR is given by filtLen, the filter order is given by filterOrder, and \
the normalized (relative to the Nyquist frequency) cutoff frequency is given \
by Wn. getButterworthFIR[filtLen,filterOrder,Wn,filtType] optionally allows \
specification of a filter type. filtType can be \\\"Lowpass\\\", \\\"Highpass\
\\\", or \\\"Bandpass\\\". If filtType is \\\"Bandpass\\\", Wn must be a \
two-element list specifying the low and high cutoff frequencies. \
getButterworthFIR[filtLen,filterOrder,Wn,filtType,\\\"Linear\\\"] returns a \
zero-phase Butterworth filter instead.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"applyButterHPF", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<applyButterHPF[x,filterOrder,Wn] or \
applyButterHPF[x,filterOrder,Wn,\\\"Linear\\\"] applies a zero-phase \
Butterworth high-pass filter of order filterOrder and normalized cut-off \
frequency Wn to the input signal x (must be a 1D List). Wn must be specified \
such that 1 corresponds to the Nyquist frequency. The output is the filtered \
signal that has the same length as x. Filtering is done in the frequency \
domain with FourierParameters set to {1, -1}. \
applyButterHPF[x,filterOrder,Wn,\\\"Original\\\"] applies a Butterworth \
high-pass filter with its original nonlinear phase response instead.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"applyButterLPF", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<applyButterLPF[x,filterOrder,Wn] or \
applyButterLPF[x,filterOrder,Wn,\\\"Linear\\\"] applies a zero-phase \
Butterworth low-pass filter of order filterOrder and normalized cut-off \
frequency Wn to the input signal x (must be a 1D List). Wn must be specified \
such that 1 corresponds to the Nyquist frequency. The output is the filtered \
signal that has the same length as x. Filtering is done in the frequency \
domain with FourierParameters set to {1, -1}. \
applyButterLPF[x,filterOrder,Wn,\\\"Original\\\"] applies a Butterworth \
low-pass filter with its original nonlinear phase response instead.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"autoCorrFunc", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<autoCorrFunc[signal] computes the autocorrelation function of signal. \
autoCorrFunc[signal,rectWinLen] optionally specifies the length, in samples, \
of the rectangular window to apply to signal prior to computing the \
autocorrelation function. The default length of the window is the length of \
signal itself (i.e. no windowing). Additionally, signal is not centered and \
normalized prior to computation, as is done in the built-in \
CorrelationFunction[] function). For more on the algorithm used here, see \
Makhoul (1975) - Linear Prediction: A Tutorial Review.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"avgGroupDelay", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<avgGroupDelay[inputIR,fS] computes the DC group delay, in samples, of \
inputIR sampled at a rate fS. avgGroupDelay[inputIR,fS,avgRange] computes the \
group delay averaged over the frequency range provided in avgRange. avgRange \
must be specified as a two-element list specifying the lower and upper \
frequency bounds, in Hz, for averaging. For example, to compute the group \
delay averaged from 0 to 500 Hz, the syntax will be grpDel = \
avgGroupDelay[inputIR,fS,{0,500}];. By default, avgRange takes the value \
{0,0}, indicating that the DC group delay value is returned.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conv", "::", 
    StyleBox["usage", "MessageName"]}], "=", "\[IndentingNewLine]", 
   "\"\<conv[x,y] circularly convolves x with y, both of which must have the \
same length. conv[x,y,\\\"lin\\\"] performs linear convolution, returning a \
signal of length = Length[x]+Length[y]-1. All convolutions are performed in \
the frequency domain. For linear convolution, it is assumed that the signals \
being convolved are causal.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deconv", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<deconv[y,x] circularly deconvolves y by x, where x cannot be longer \
than y. If x is shorter, x is zero-padded on the right before deconvolution \
(i.e. it is assumed that x is causal). deconv[y,x,\\\"lin\\\"] performs \
linear deconvolution, returning a signal with length = Length[y]-Length[x]+1, \
where Length[x] < Length[y]. All deconvolutions are performed in the \
frequency domain. For linear deconvolution, it is assumed that y is the \
result of linearly convolving x with another causal signal so that the result \
of the deconvolution will be causal.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupDelaySpec", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<groupDelaySpec[inputIR] returns the group delay spectrum of inputIR, \
which must be a 1D List. The output will have the same dimensions as inputIR.\
\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IRtoTF", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<IRtoTF[IR] outputs the transfer function corresponding to the input \
impulse response (IR). IR must be a 1D List. The output will have the same \
dimensions as IR. To compute the discrete Fourier transform, \
FourierParameters is set to {1, -1}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"KaiserLPFIR", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<KaiserLPFIR[irLen,pbCutoff,sbCutoff] generates a Kaiser window-based \
linear-phase low-pass filter IR of length irLen and with passband and \
stopband normalized cutoff frequencies pbCutoff and sbCutoff specified in \
rad, respectively. The cutoff frequencies are normalized such that \[Pi] \
corresponds to the Nyquist frequency.\n\nOPTIONAL INPUTS:\n\t1. \\\"PB Gain\\\
\" \[RightArrow] minimum passband gain in dB (default -1).\n\t2. \\\"SB \
Gain\\\" \[RightArrow] maximum stopband gain in dB (default -30).\nEXAMPLE:\n\
\tlpfIR = KaiserLPFIR[1024,0.5\[Pi],0.6\[Pi],\\\"SB Gain\\\" \[RightArrow] \
-40];\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lpResidual", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<lpResidual[signal,p] computes the linear prediction residual of \
signal, which must be a 1D List. The order of the predictor is specified by \
p. For more on the algorithm, see Makhoul (1975) - Linear Prediction: A \
Tutorial Review.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"raisedCosWin", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<raisedCosWin[winLen] generates a raised-cosine window of length \
winLen. raisedCosWin[winLen,r] allows control over the shape of the window, \
where r is an ordered pair of fractions of samples equal to parts of an \
attack and decay cosine with the following two restrictions: (1) 0 \
\[LessEqual] r(i) \[LessEqual] 1, i = 1,2, and (2) r(1)+r(2) \[LessEqual] 1; \
Examples: r = {0,0} - rect.; r = {0.5,0.5} - hann.; r = {0.25,0.25} - \
default.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"resample", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   StyleBox[
    "\"\<resample[inputSignal,inputSR,outputSR] uses bandlimited \
interpolation to generate an output signal that has outputSR/inputSR times \
the number of samples as inputSignal. A Kaiser window-based low-pass \
anti-aliasing filter is applied. inputSignal must be a 1D List.\>\"", 
    "MessageName"]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"signalOnset", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<signalOnset[inputSignal] computes the onset sample of inputSignal as \
the first sample value at which inputSignal is at least 20% of its absolute \
maximum. inputSignal must be a 1D List. The output will be a scalar.\n\n\
OPTIONAL INPUTS:\n\t1. \\\"Threshold\\\" \[RightArrow] specifies the \
threshold percentage to use instead of the default 20%.\n\t2. \
\\\"Resampling\\\" \[RightArrow] resampling factor by which inputSignal is \
first resampled.\nEXAMPLE:\n\tonsetSample = \
signalOnset[inputSignal,\\\"Threshold\\\" \[RightArrow] 10,\\\"Resampling\\\" \
\[RightArrow] 4];.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TFtoIR", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<TFtoIR[TF] outputs the impulse response corresponding to the input \
transfer function (TF). TF must be a 1D List. The output will have the same \
dimensions as TF. To compute the inverse discrete Fourier transform, \
FourierParameters is set to {1, -1}.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"tukeyWin", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<tukeyWin[winLen] generates a Tukey window of length winLen. \
tukeyWin[winLen,r] allows control over the shape of the window, where r is \
the fraction of samples that correspond to parts of a cosine function such \
that 0 \[LessEqual] r \[LessEqual] 1. Examples: r = 0 - rect.; r = 1 - hann.; \
r = 0.5 - default.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"unwrapPhase", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<unwrapPhase[inputPhase] unwraps the wrapped phase response, \
inputPhase. unwrapPhase[inputPhase,tol] optionally specifies a phase wrapping \
tolerance. The default value of tol is \[Pi]. inputPhase must be a 1D List. \
The output will have the same dimensions as inputPhase.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inverseFilter", "::", 
    StyleBox["usage", "MessageName"]}], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<inverseFilter[h] computes the impulse response of the inverse filter \
corresponding to the input impulse response, h, which must be a 1D List.\n\n\
OPTIONAL INPUTS:\n\t1. \\\"Regularization\\\" \[RightArrow] specifies the \
type of regularization to apply with \\\"None\\\" (default), \
\\\"Piecewise\\\", and \\\"Custom\\\" being the three options.\n\t2. \
\\\"Regularization Ranges\\\" \[RightArrow] list of triples {W1, W2, \
\[Epsilon]} which specifies the regularization parameter \[Epsilon] in the \
normalized frequency range {W1, W2} where 0 \[LessEqual] W1,W2 \[LessEqual] 1 \
and where 1 corresponds to the Nyquist frequency. This option is only \
required when \\\"Regularization\\\" is set to \\\"Piecewise\\\". The default \
values are {{0,1,0}} and correspond to no regularization.\n\t3. \
\\\"SampleRate\\\" \[RightArrow] sampling rate in Hz. This option is only \
required when \\\"Regularization\\\" is set to \\\"Custom\\\". The default \
values is 96000.\n\t4. \\\"AvgFreqRange\\\" \[RightArrow] frequency range, in \
Hz, over which log-weighted average level is computed prior to inversion. \
This option is only required when \\\"Regularization\\\" is set to \\\"Custom\
\\\". The default values are {100,18000}.\n\t5. \\\"InvFreqRange\\\" \
\[RightArrow] frequency range, in Hz, over which direct inversion is \
performed. This option is only required when \\\"Regularization\\\" is set to \
\\\"Custom\\\". The default values are {20,20000}.\n\t6. \\\"MaxDynRange\\\" \
\[RightArrow] maximum dynamic range, in dB, of the inverse filter. This \
option is only required when \\\"Regularization\\\" is set to \\\"Custom\\\". \
If the dynamic range of the inverse filter within AvgFreqRange is less than \
the specified value, then that dynamic range supersedes the value specified \
here. The default value is 24 dB.\nEXAMPLE:\n\tinvFilt = \
inverseFilter[filt,\\\"Regularization\\\"\[Rule]\\\"Piecewise\\\",\\\"\
Regularization Ranges\\\"\[Rule]{{0,0.1,0.001},{0.2,1,0}}];.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"piecewiseRegularization", "::", "usage"}], "MessageName"], 
   StyleBox["=", "MessageName"], 
   StyleBox["\[IndentingNewLine]", "MessageName"], 
   "\"\<piecewiseRegularization[N,\[Epsilon]List] returns a piecewise \
regularization profile of length N and with regularization ranges specifed by \
a list of triples, more details of which may be found in the function \
description for the inverseFilter[] function.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HatzOctaveSmoothPS", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<HatzOctaveSmoothPS[inputPowerSpectrum] returns a one-third octave \
smoothed version of the input power spectrum using a Hann window for \
smoothing. The input must be a power spectrum. The algorithm used is \
described in Hatziantoniou and Mourjopoulos (2000) - Generalized \
fractional-octave smoothing of audio and acoustic responses. \
inputPowerSpectrum must be a 1D List.\n\nOPTIONAL INPUTS:\n\t1. \\\"Smoothing \
Factor\\\" \[RightArrow] specifies the denominator of the fraction used to \
specify the amount of smoothing to apply. For example, specifying 3 performs \
one-third octave smoothing.\n\t2. \\\"Window\\\" \[RightArrow] specifies the \
type of smoothing window to use. The options are \\\"Rectangular\\\", \
\\\"Hann\\\", and \\\"Hamming\\\".\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteAnalyticSignal", "::", "usage"}], "=", 
   "\[IndentingNewLine]", 
   "\"\<discreteAnalyticSignal[inputSignal] returns the discrete analytic \
version of inputSignal, which must be a 1D List.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"envelopeSignal", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<envelopeSignal[inputSignal] returns the positive and negative \
envelopes of inputSignal as a two-dimensional list with the first dimension \
containing the positive envelope. inputSignal must be a 1D List.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HilbertTransform", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<HilbertTransform[inputSignal] computes the Hilbert transform of \
inputSignal, which must be a 1D List.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAllPassIR", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<getAllPassIR[inputIR] returns the all-pass version of inputIR, which \
must be a 1D List. The output will have the same dimensions as \
inputIR.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMinimumPhaseIR", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<getMinimumPhaseIR[inputIR] returns the minimum-phase version of \
inputIR, which must be a 1D List. The output will have the same dimensions as \
inputIR.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realCepstrum", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<realCepstrum[inputSignal] returns the real cepstrum of inputIR, which \
must be a 1D List. The output will have the same dimensions as \
inputIR.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBalancedIR", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<getBalancedIR[inputIR] returns the balanced realization of inputIR \
based on the algorithm described by Beliczynski et al. (1992) - Approximation \
of FIR by IIR Digital Filters: An Algorithm Based on Balanced Model \
Reduction. inputIR must be a 1D List. The output will have the same \
dimensions as inputIR.\n\nOPTIONAL INPUTS:\n\t1. \\\"Order\\\" \[RightArrow] \
specifies the order of the balanced IR. This must be between 1 and the length \
of inputIR in samples. (default = length of inputIR)\n\t2. \\\"Sampling \
Rate\\\" \[RightArrow] specifies the sampling rate in Hz. (default = \
44100).\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSPLNorm", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<getSPLNorm[refSPL] returns the normalization factor required to \
normalize transfer functions to represent magnitude responses in dB SPL. The \
required input to the function, refSPL, must specify the SPL corresponding to \
0 dBFS. In the 3D3A Lab at Princeton University, the typical calibration \
results in 94 dBSPL corresponding to -11 dBFS, giving a refSPL value of 105 \
dB. If refSPL is not specified, 105 dB is assumed.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sweepToIR", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<sweepToIR[sweepFilePath] imports an n-channel sweep file (where n > \
2) in AIFF or WAV format with the (n-1)th channel containing the sweep signal \
and the nth channel containing a sweep trigger signal (containing p triggers \
for each of p sweeps, with p > 0), deconvolves all preceding channels by the \
sweep signal, and exports the results as an (n-2)-by-p matrix (i.e. list of \
lists) of IRs. sweepToIR[sweepFilePath,numOuts] specifies the number of \
outputs to return. numOuts can take a scalar value between 1 and 4 and the \
following outputs are returned in each case: (1) - IRs, (2) - {IRs,Fs}, (3) - \
{IRs,Fs,sweepSignal}, (4) - {IRs,Fs,sweepSignal,snrSpec}, where Fs is the \
sampling rate in Hz, snrSpec contains estimates of the signal-to-noise ratio \
spectra (in absolute magnitude units) for each microphone channel, and \
sweepSignal is a 1D List containing the input sweep signal used during the \
original measurement. As such, zero-padding the output IRs and circularly \
convolving with sweepSignal should give an estimate of the raw microphone \
signals captured during the sweep measurement. \
sweepToIR[sweepFilePath,numOuts,{FL,FU}] optionally specifies the sweep start \
(FL) and end (FU) frequencies, in Hz, so that a Butterworth bandpass filter \
with these cut-off frequencies is applied to the deconvolved signal. FL and \
FU must satisfy the following: 0 < FL < FU and FL < FU < Fs/2. If FL = 0 and \
FU = Fs/2 are specifed, a bandpass filter is not applied. \
sweepToIR[sweepFilePath,numOuts,{FL,FU},sweepDur] specifies the duration of \
the sweep in seconds. This enables a more accurate estimate of snrSpec. If \
snrSpec is not requested at the output, specifying sweepDur has no effect. To \
use the default (e.g., if the sweep duration is unknown), sweepDur may be \
specified as 0. Finally, \
sweepToIR[sweepFilePath,numOuts,{FL,FU},sweepDur,phaseFlag] specifies whether \
or not the applied Butterworth bandpass filter should retain its original \
phase response (phaseFlag = 0 - default) or be made to have linear phase \
(phaseFlag = 1).\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getForwardSTFT", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<getForwardSTFT[x,\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\),\!\(\*\
StyleBox[\"p\",FontSlant->\"Italic\"]\)] computes the STFT of \!\(\*StyleBox[\
\"x\",FontSlant->\"Italic\"]\) using overlapping partitions of length \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\
\"Italic\"]\) and \!\(\*StyleBox[\"p\",FontSlant->\"Italic\"]\) overlapping \
samples. Optionally, \
getForwardSTFT[\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"\
n\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"p\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"wfun\",FontSlant->\"\
Italic\"]\)] applies a smoothing window \
\!\(\*StyleBox[\"wfun\",FontSlant->\"Italic\"]\) to each partition.\>\""}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInverseSTFT", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<getInverseSTFT[\!\(\*StyleBox[\"Y\",FontSlant->\"Italic\"]\),\!\(\*\
StyleBox[\"n\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"p\",FontSlant->\"\
Italic\"]\)] computes the inverse STFT of the spectrogram \
\!\(\*StyleBox[\"Y\",FontSlant->\"Italic\"]\), which is computed using \
overlapping partitions of length \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\
\"Italic\"]\) and \!\(\*StyleBox[\"p\",FontSlant->\"Italic\"]\) overlapping \
samples. Optionally, \
getInverseSTFT[\!\(\*StyleBox[\"list\",FontSlant->\"Italic\"]\),\!\(\*\
StyleBox[\"n\",FontSlant->\"Italic\"]\),\!\(\*StyleBox[\"p\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\",\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"wfun\
\",FontSlant->\"Italic\"]\)] specifies the smoothing window \
\!\(\*StyleBox[\"wfun\",FontSlant->\"Italic\"]\) which is applied to each \
partition.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addTFs", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<addTFs[H1,H2] takes as inputs two transfer functions and returns the \
magnitude square of their sum (i.e., Abs[H1+H2\!\(\*SuperscriptBox[\(]\), \(2\
\)]\)). This command may also be specified as \
addTFs[H1,H2,\\\"Correlated\\\"]. addTFs[H1,H2,\\\"Uncorrelated\\\"] returns \
Abs[H1\!\(\*SuperscriptBox[\(]\), \(2\)]\)+Abs[H2\!\(\*SuperscriptBox[\(]\), \
\(2\)]\) instead.\>\""}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forceConjugateSymmetry", "::", "usage"}], "=", 
  "\[IndentingNewLine]", 
  "\"\<forceConjugateSymmetry[H] takes an input complex transfer function and \
returns a conjugate symmetric version. H must be a 1D List. The output will \
have the same dimensions as H.\>\""}]}], "Input",
 CellChangeTimes->{
  3.6964253886805487`*^9, {3.696426294808119*^9, 3.6964262995631742`*^9}, {
   3.696429001491379*^9, 3.696429074348794*^9}, {3.6964291114561996`*^9, 
   3.696429338547283*^9}, {3.696429373966357*^9, 3.696429400591421*^9}, {
   3.6964295510656023`*^9, 3.6964296254806147`*^9}, {3.696431176899065*^9, 
   3.696431520539503*^9}, {3.696435310225307*^9, 3.696435332969208*^9}, {
   3.6964355422988157`*^9, 3.696435704384893*^9}, 3.696435798335586*^9, {
   3.696435831806366*^9, 3.696435837150316*^9}, {3.696437568604919*^9, 
   3.6964376315796223`*^9}, {3.696874848602005*^9, 3.696874888660552*^9}, {
   3.696879906135623*^9, 3.696879947419365*^9}, {3.697234263085574*^9, 
   3.697234304791492*^9}, {3.697234348262232*^9, 3.697234409377549*^9}, {
   3.697301954957119*^9, 3.697302041258378*^9}, {3.697302072496463*^9, 
   3.697302096802705*^9}, {3.6973021400973797`*^9, 3.69730230365635*^9}, {
   3.697302391000149*^9, 3.6973024256102943`*^9}, {3.697302474544812*^9, 
   3.6973028418324623`*^9}, {3.697302887243559*^9, 3.697302904158752*^9}, {
   3.6973029841170273`*^9, 3.69730300290808*^9}, {3.6973044059968576`*^9, 
   3.6973044148530893`*^9}, {3.697304463952818*^9, 3.697304797157672*^9}, {
   3.6973048278377666`*^9, 3.69730482899338*^9}, {3.697305910874877*^9, 
   3.697305955124257*^9}, {3.6973103817049417`*^9, 3.6973103825644703`*^9}, {
   3.6973107951108923`*^9, 3.697310800873816*^9}, {3.69731083246634*^9, 
   3.697310874736945*^9}, {3.697311295236581*^9, 3.697311384157991*^9}, {
   3.6973231951034737`*^9, 3.697323329812594*^9}, {3.697323408015822*^9, 
   3.6973234080226088`*^9}, {3.697323450197741*^9, 3.697323461833709*^9}, {
   3.697324023632036*^9, 3.6973241183608847`*^9}, {3.6973242393101883`*^9, 
   3.697324248188498*^9}, {3.697324427686599*^9, 3.697324458999237*^9}, {
   3.697324870517679*^9, 3.697324915806178*^9}, 3.697324971775447*^9, {
   3.697326350044251*^9, 3.6973265933993073`*^9}, {3.697326804329473*^9, 
   3.697326832847131*^9}, {3.6973270130674953`*^9, 3.69732712711615*^9}, {
   3.697327188388651*^9, 3.697327211116412*^9}, {3.697327620782864*^9, 
   3.6973276888292513`*^9}, {3.697327815771402*^9, 3.6973280554570093`*^9}, 
   3.6973284521858597`*^9, {3.6973319040707912`*^9, 3.697331904706645*^9}, {
   3.697563019245335*^9, 3.697563026320546*^9}, {3.697563059141955*^9, 
   3.6975630601144133`*^9}, {3.700802881648094*^9, 3.700803017418497*^9}, {
   3.700862581884243*^9, 3.7008625950023518`*^9}, {3.700862636949485*^9, 
   3.7008627240173597`*^9}, {3.7008627732857733`*^9, 3.700862817872313*^9}, {
   3.7008628537796907`*^9, 3.7008629834223347`*^9}, {3.7008630180497427`*^9, 
   3.7008631292643003`*^9}, {3.700863249750937*^9, 3.700863260657749*^9}, {
   3.7010224862273493`*^9, 3.7010224863064938`*^9}, {3.7108807395509453`*^9, 
   3.710880958334106*^9}, {3.710881003325993*^9, 3.71088103386026*^9}, {
   3.710881081849526*^9, 3.7108811657114964`*^9}, {3.710979659890513*^9, 
   3.710979709614993*^9}, {3.710979748911853*^9, 3.710979834789258*^9}, {
   3.710980363147476*^9, 3.710980384001679*^9}, {3.710982171656384*^9, 
   3.710982210127349*^9}, {3.710982308665003*^9, 3.71098234461619*^9}, {
   3.710982385956046*^9, 3.710982414162877*^9}, {3.7112817779315033`*^9, 
   3.711281793282496*^9}, {3.7112826279186563`*^9, 3.711282687381146*^9}, {
   3.711282717427253*^9, 3.711282832395198*^9}, {3.711283678541214*^9, 
   3.711283759551218*^9}, {3.711283790285316*^9, 3.711283824007059*^9}, {
   3.711283855782969*^9, 3.711283857767741*^9}, {3.71128392700625*^9, 
   3.711283927549426*^9}, {3.7306431769747257`*^9, 3.730643297980668*^9}, {
   3.730643330840046*^9, 3.730643345022758*^9}, {3.730643379030058*^9, 
   3.730643398892078*^9}, {3.730643455221135*^9, 3.730643458946374*^9}, {
   3.7306435766050177`*^9, 3.730643687696537*^9}, {3.730665343812908*^9, 
   3.7306655112616158`*^9}, {3.7306665585689993`*^9, 3.730666650101592*^9}, {
   3.730666681477236*^9, 3.730666845265204*^9}, {3.730666947230304*^9, 
   3.73066695682969*^9}, {3.7432773418826027`*^9, 3.74327734313927*^9}, {
   3.7432775157830677`*^9, 3.7432776271005077`*^9}, {3.7432776600197287`*^9, 
   3.743277894832162*^9}, {3.743277935728097*^9, 3.743278023351735*^9}, {
   3.743278068363559*^9, 3.743278101707802*^9}, {3.7432783156466417`*^9, 
   3.743278346287772*^9}, {3.743278385268585*^9, 3.743278500466249*^9}, {
   3.74327871727204*^9, 3.74327872327495*^9}, {3.743278795397004*^9, 
   3.7432788161993847`*^9}, {3.7432788902044697`*^9, 3.743278901369925*^9}, {
   3.743278962296001*^9, 3.7432793735570498`*^9}, {3.7432794296504173`*^9, 
   3.743279737573584*^9}, {3.745776362135453*^9, 3.745776362590293*^9}, {
   3.7469909895407343`*^9, 3.746991051920265*^9}, {3.750677126585059*^9, 
   3.750677144701606*^9}, {3.750682658497123*^9, 3.7506827808240833`*^9}, {
   3.750683188335658*^9, 3.750683267014526*^9}, 3.7506833505962143`*^9, {
   3.7526108760726137`*^9, 3.752611167603908*^9}, {3.759743690735177*^9, 
   3.759743696155362*^9}, {3.759743929804028*^9, 3.75974395660716*^9}, {
   3.767529503301136*^9, 3.7675295154452047`*^9}, {3.767529556020381*^9, 
   3.7675297080334673`*^9}, {3.810461484547017*^9, 3.810461627906789*^9}, {
   3.810654636005515*^9, 3.810655115493989*^9}, {3.810655168845299*^9, 
   3.8106552323705*^9}, {3.8106552651967583`*^9, 3.810655266231963*^9}, {
   3.813183309195956*^9, 3.813183362862049*^9}, {3.834366671566237*^9, 
   3.834366699332726*^9}, {3.834366774155383*^9, 3.834366857008263*^9}, {
   3.834366905144436*^9, 3.8343669464860277`*^9}, {3.834367174384585*^9, 
   3.834367309523246*^9}, {3.83436942473872*^9, 3.834369528604301*^9}, {
   3.834369710918209*^9, 3.834369732026536*^9}, {3.834370266095044*^9, 
   3.8343702878285723`*^9}, {3.834401780738764*^9, 3.8344018107806273`*^9}, {
   3.834401874248911*^9, 3.834401878551703*^9}, {3.8344019303281393`*^9, 
   3.8344019494205723`*^9}, {3.834402013297975*^9, 3.834402033365519*^9}, {
   3.8344020982801857`*^9, 3.834402099630889*^9}, {3.83440214351508*^9, 
   3.8344021590732517`*^9}, {3.834402201835793*^9, 3.834402216841897*^9}, {
   3.834402294520801*^9, 3.8344023100927887`*^9}, {3.834406266987463*^9, 
   3.8344062715378933`*^9}, {3.834406350197774*^9, 3.834406446931879*^9}, {
   3.8344064777544622`*^9, 3.834406536212227*^9}, {3.8344065943164*^9, 
   3.8344066140122423`*^9}, {3.834406665765656*^9, 3.834406668882474*^9}, {
   3.834406736125988*^9, 3.8344067364990177`*^9}, {3.834406790009334*^9, 
   3.834406790429974*^9}, {3.834406887374219*^9, 3.834406887682535*^9}, {
   3.8344069270242767`*^9, 3.834407026078816*^9}, {3.834408938537265*^9, 
   3.834408982494504*^9}, {3.834409014681388*^9, 3.834409038694193*^9}, {
   3.8344090791977262`*^9, 3.834409165943727*^9}, {3.834409206895199*^9, 
   3.834409212899955*^9}, {3.834435961776125*^9, 3.83443604103229*^9}, {
   3.834436477357848*^9, 3.834436511223783*^9}, {3.83443654840668*^9, 
   3.83443662378225*^9}, {3.834436706452586*^9, 3.834436708872703*^9}, {
   3.834486748675303*^9, 3.834486858037134*^9}, {3.8344868943128347`*^9, 
   3.834486976569334*^9}, {3.834487049832412*^9, 3.834487132931973*^9}, {
   3.834487174172942*^9, 3.83448735383248*^9}, {3.834574392485071*^9, 
   3.8345744023543587`*^9}, {3.834574559887548*^9, 3.83457456057953*^9}, {
   3.8372802360931187`*^9, 3.837280244363316*^9}, {3.837421849207756*^9, 
   3.83742203986968*^9}, {3.837422073719771*^9, 3.837422125144932*^9}, {
   3.837422741515902*^9, 3.837422842995429*^9}, {3.8374231528615017`*^9, 
   3.837423152929677*^9}, {3.837596828732802*^9, 3.837596970337901*^9}, {
   3.8375970863771276`*^9, 3.837597135127062*^9}, {3.837597168371217*^9, 
   3.837597169906962*^9}, {3.837614134282844*^9, 3.837614426842003*^9}, {
   3.841569372427335*^9, 3.841569388017845*^9}, {3.8415710651048107`*^9, 
   3.841571142764937*^9}, {3.841571175569296*^9, 3.8415711967108192`*^9}, {
   3.841571239208003*^9, 
   3.841571471220847*^9}},ExpressionUUID->"307a3671-e91d-4952-9cdc-\
4fed5cf9a742"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Begin the `Private context", "Section",ExpressionUUID->"b0cf2bd9-b3e0-40b9-a309-0b141bf1a237"],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.696425423841115*^9, 3.6964254312154617`*^9}, {
  3.6964764641976767`*^9, 
  3.696476464485498*^9}},ExpressionUUID->"713d542c-4ab3-4ce7-b436-\
007adbaf716e"],

Cell[CellGroupData[{

Cell["Function definitions", "Subsection",ExpressionUUID->"75880e96-35c6-446a-a416-0c90d35f9bbc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getButterworthFIR", "[", 
    RowBox[{"filtLen_", ",", "filterOrder_", ",", "Wn_", ",", 
     RowBox[{"filtType_", ":", "\"\<Lowpass\>\""}], ",", 
     RowBox[{"phaseType_", ":", " ", "\"\<Original\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dtf", ",", "filtIR", ",", "n", ",", "s", ",", "z"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dtf", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{"ToDiscreteTimeModel", "[", 
         RowBox[{
          RowBox[{"ButterworthFilterModel", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"filtType", ",", "filterOrder", ",", " ", 
              RowBox[{"N", "[", 
               RowBox[{"2", " ", "Pi", " ", "Wn"}], "]"}]}], "}"}], ",", 
            "s"}], "]"}], ",", "0.5", ",", "z"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"filtIR", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Re", "[", 
         RowBox[{"OutputResponse", "[", 
          RowBox[{"dtf", ",", 
           RowBox[{"KroneckerDelta", "[", "n", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0.", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"filtLen", "-", "1."}], ")"}], "/", "2."}]}], "}"}]}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"phaseType", "\[Equal]", "\"\<Linear\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"filtIR", "=", 
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"TFtoIR", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"IRtoTF", "[", "filtIR", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{"filtLen", "/", "2"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "filtIR"}]}],
     "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"applyButterHPF", "[", 
    RowBox[{"x_", ",", "filterOrder_", ",", "Wn_", ",", 
     RowBox[{"phaseType_", ":", " ", "\"\<Linear\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IRLen", ",", "IRLenPad", ",", "dtf", ",", "hpfIR", ",", "y", ",", "n", 
       ",", "s", ",", "z"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IRLen", " ", "=", " ", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "IRLen", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IRLenPad", "=", 
          RowBox[{"IRLen", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IRLenPad", "=", "IRLen"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dtf", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{"ToDiscreteTimeModel", "[", 
         RowBox[{
          RowBox[{"ButterworthFilterModel", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Highpass\>\"", ",", "filterOrder", ",", " ", 
              RowBox[{"N", "[", 
               RowBox[{"2", " ", "Pi", " ", "Wn"}], "]"}]}], "}"}], ",", 
            "s"}], "]"}], ",", "0.5", ",", "z"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hpfIR", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Re", "[", 
         RowBox[{"OutputResponse", "[", 
          RowBox[{"dtf", ",", 
           RowBox[{"KroneckerDelta", "[", "n", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0.", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"IRLenPad", "-", "1."}], ")"}], "/", "2."}]}], "}"}]}],
           "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "phaseType", ",", "\[IndentingNewLine]", "\"\<Linear\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hpfIR", "=", 
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"TFtoIR", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"IRtoTF", "[", "hpfIR", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{"IRLenPad", "/", "2"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{
             RowBox[{"conv", "[", 
              RowBox[{"x", ",", "hpfIR", ",", "\"\<lin\>\""}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"IRLenPad", "/", "2"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", "IRLen"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        ",", "\"\<Original\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y", "=", 
          RowBox[{
           RowBox[{"conv", "[", 
            RowBox[{"x", ",", "hpfIR", ",", "\"\<lin\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", "IRLen"}], "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", 
          "\"\<Invalid phaseType specification in function applyButterHPF. \
Aborting...\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "y"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Old", " ", "method", " ", "commented", " ", "below"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"IRLen", " ", "=", " ", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xp", " ", "=", " ", 
       RowBox[{"PadRight", "[", 
        RowBox[{"x", ",", 
         RowBox[{"2", "IRLen"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"W", " ", "=", " ", 
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "IRLen"}], "]"}], ",", 
           RowBox[{"Reverse", "[", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"IRLen", "-", "1"}]}], "]"}], "]"}]}], "]"}], "IRLen"], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HPF", " ", "=", " ", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["W", "Wn"], ")"}], 
            RowBox[{"2", "filterOrder"}]]}], "]"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hpfIR", "=", 
       RowBox[{"TFtoIR", "[", "HPF", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{"RotateLeft", "[", 
         RowBox[{
          RowBox[{"conv", "[", 
           RowBox[{"xp", ",", 
            RowBox[{"RotateRight", "[", 
             RowBox[{"hpfIR", ",", "IRLen"}], "]"}]}], "]"}], ",", "IRLen"}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", "IRLen"}], "]"}], "]"}]}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"applyButterLPF", "[", 
    RowBox[{"x_", ",", "filterOrder_", ",", "Wn_", ",", 
     RowBox[{"phaseType_", ":", "\"\<Linear\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IRLen", ",", "IRLenPad", ",", "dtf", ",", "lpfIR", ",", "y", ",", "n", 
       ",", "s", ",", "z"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IRLen", " ", "=", " ", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "IRLen", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IRLenPad", "=", 
          RowBox[{"IRLen", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IRLenPad", "=", "IRLen"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"dtf", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{"ToDiscreteTimeModel", "[", 
         RowBox[{
          RowBox[{"ButterworthFilterModel", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Lowpass\>\"", ",", "filterOrder", ",", " ", 
              RowBox[{"N", "[", 
               RowBox[{"2", " ", "Pi", " ", "Wn"}], "]"}]}], "}"}], ",", 
            "s"}], "]"}], ",", "0.5", ",", "z"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lpfIR", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Re", "[", 
         RowBox[{"OutputResponse", "[", 
          RowBox[{"dtf", ",", 
           RowBox[{"KroneckerDelta", "[", "n", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0.", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"IRLenPad", "-", "1."}], ")"}], "/", "2."}]}], "}"}]}],
           "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "phaseType", ",", "\[IndentingNewLine]", "\"\<Linear\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"lpfIR", "=", 
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"TFtoIR", "[", 
             RowBox[{"Abs", "[", 
              RowBox[{"IRtoTF", "[", "lpfIR", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{"IRLenPad", "/", "2"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{
             RowBox[{"conv", "[", 
              RowBox[{"x", ",", "lpfIR", ",", "\"\<lin\>\""}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"IRLenPad", "/", "2"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", "IRLen"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        ",", "\"\<Original\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y", "=", 
          RowBox[{
           RowBox[{"conv", "[", 
            RowBox[{"x", ",", "lpfIR", ",", "\"\<lin\>\""}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", "IRLen"}], "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", 
          "\"\<Invalid phaseType specification in function applyButterLPF. \
Aborting...\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "y"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Old", " ", "method", " ", "commented", " ", "below"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"IRLen", " ", "=", " ", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xp", " ", "=", " ", 
       RowBox[{"PadRight", "[", 
        RowBox[{"x", ",", 
         RowBox[{"2", "IRLen"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"W", " ", "=", " ", 
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "IRLen"}], "]"}], ",", 
           RowBox[{"Reverse", "[", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"IRLen", "-", "1"}]}], "]"}], "]"}]}], "]"}], "IRLen"], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LPF", " ", "=", " ", 
       FractionBox["1", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["W", "Wn"], ")"}], 
           RowBox[{"2", "filterOrder"}]]}], "]"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lpfIR", "=", 
       RowBox[{"TFtoIR", "[", "LPF", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{"RotateLeft", "[", 
         RowBox[{
          RowBox[{"conv", "[", 
           RowBox[{"xp", ",", 
            RowBox[{"RotateRight", "[", 
             RowBox[{"lpfIR", ",", "IRLen"}], "]"}]}], "]"}], ",", "IRLen"}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", "IRLen"}], "]"}], "]"}]}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"autoCorrFunc", "[", 
    RowBox[{"signal_", ",", 
     RowBox[{"rectWinLen_", ":", " ", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"signalLen", ",", "acf"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"rectWinLen", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"signalLen", "=", 
          RowBox[{"Length", "[", "signal", "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"signalLen", "=", 
          RowBox[{"Clip", "[", 
           RowBox[{"rectWinLen", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", 
              RowBox[{"Length", "[", "signal", "]"}]}], "}"}]}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"acf", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "signalLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"acf", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "=", 
          RowBox[{"Total", "[", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"signal", " ", 
              RowBox[{"RotateLeft", "[", 
               RowBox[{"signal", ",", 
                RowBox[{"ii", "-", "1"}]}], "]"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"ii", "-", "1"}], ")"}]}]}], "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "signalLen"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "acf"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgGroupDelay", "[", 
    RowBox[{"inputIR_", ",", "fS_", ",", 
     RowBox[{"avgRange_", ":", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "0."}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inputIRLen", ",", "fVec", ",", "avgR", ",", "avgRL", ",", "avgRR", ",",
        "fIndices", ",", "grpDSpec", ",", "avgGrpDel"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inputIRLen", "=", 
       RowBox[{"Length", "[", "inputIR", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"fVec", "=", 
       RowBox[{"freqList", "[", 
        RowBox[{"inputIRLen", ",", "fS"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"avgR", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{"avgRange", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", 
           RowBox[{"fS", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"avgRL", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"fVec", ",", 
         RowBox[{"Min", "[", "avgR", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"avgRR", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"fVec", ",", 
         RowBox[{"Max", "[", "avgR", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fIndices", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"fVec", ",", 
          RowBox[{
           RowBox[{"avgRL", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "|", 
           RowBox[{"avgRR", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"grpDSpec", "=", 
       RowBox[{"groupDelaySpec", "[", "inputIR", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "fIndices", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"avgGrpDel", "=", 
          RowBox[{"grpDSpec", "[", 
           RowBox[{"[", 
            RowBox[{"fIndices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"avgGrpDel", "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"grpDSpec", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Min", "[", "fIndices", "]"}], ";;", 
              RowBox[{"Max", "[", "fIndices", "]"}]}], "]"}], "]"}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Round", "[", "avgGrpDel", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"conv", "[", 
    RowBox[{"x_", ",", "y_", ",", 
     RowBox[{"type_", ":", "\"\<circ\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "yLen", ",", "xLen", ",", "output", ",", "padLen", ",", "yPad", ",", 
       "xPad"}], "}"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yLen", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xLen", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "type", ",", "\[IndentingNewLine]", "\"\<circ\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"xLen", "\[Equal]", "yLen"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"output", "=", 
            RowBox[{"TFtoIR", "[", 
             RowBox[{
              RowBox[{"IRtoTF", "[", "x", "]"}], " ", 
              RowBox[{"IRtoTF", "[", "y", "]"}]}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "MessageDialog", "[", 
            "\"\<Sequences must be of the same length for circular \
convolution. Otherwise choose the linear convolution option.\>\"", "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         "\[IndentingNewLine]", ",", "\"\<lin\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"padLen", "=", 
          RowBox[{"xLen", "+", "yLen", "-", "1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"yPad", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"y", ",", "padLen", ",", "0."}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xPad", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"x", ",", "padLen", ",", "0."}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"TFtoIR", "[", 
           RowBox[{
            RowBox[{"IRtoTF", "[", "xPad", "]"}], " ", 
            RowBox[{"IRtoTF", "[", "yPad", "]"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", 
          "\"\<Unrecognized input. See function help for valid inputs.\>\"", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "output"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deconv", "[", 
    RowBox[{"y_", ",", "x_", ",", 
     RowBox[{"type_", ":", "\"\<circ\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "yLen", ",", "xLen", ",", "padLen", ",", "yPad", ",", "xPad", ",", 
       "outputPad", ",", "output"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yLen", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xLen", "=", 
       RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"xLen", ">", "yLen"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", 
          "\"\<The length of x cannot exceed that of y.\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "type", ",", "\[IndentingNewLine]", "\"\<circ\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xPad", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"x", ",", "yLen", ",", "0."}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"TFtoIR", "[", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"IRtoTF", "[", "y", "]"}], "/", " ", 
              RowBox[{"IRtoTF", "[", "xPad", "]"}]}], "]"}], "/.", 
            RowBox[{"ComplexInfinity", "\[Rule]", "0."}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\"\<lin\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xPad", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"x", ",", "yLen", ",", "0."}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"outputPad", "=", 
          RowBox[{"TFtoIR", "[", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"IRtoTF", "[", "y", "]"}], "/", " ", 
              RowBox[{"IRtoTF", "[", "xPad", "]"}]}], "]"}], "/.", 
            RowBox[{"ComplexInfinity", "\[Rule]", "0."}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"outputPad", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"yLen", "-", "xLen", "+", "1"}]}], "]"}], "]"}]}], ";"}],
         "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", 
          "\"\<Unrecognized input. See function help for valid inputs.\>\"", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "output"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"groupDelaySpec", "[", "inputIR_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inputIRLen", ",", "ramp", ",", "grpDSpec"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inputIRLen", "=", 
       RowBox[{"Length", "[", "inputIR", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"ramp", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0.", ",", 
         RowBox[{"inputIRLen", "-", "1."}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"grpDSpec", "=", 
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{
           RowBox[{"IRtoTF", "[", 
            RowBox[{"inputIR", " ", "ramp"}], "]"}], "/", 
           RowBox[{"IRtoTF", "[", "inputIR", "]"}]}], "]"}], "/.", 
         RowBox[{"ComplexInfinity", "\[Rule]", "0."}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IRtoTF", "[", "IR_", "]"}], ":=", 
   RowBox[{"Fourier", "[", 
    RowBox[{"IR", ",", 
     RowBox[{"FourierParameters", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "KaiserLPFIR", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<PB Gain\>\"", "\[Rule]", 
      RowBox[{"-", "1."}]}], ",", 
     RowBox[{"\"\<SB Gain\>\"", "\[Rule]", 
      RowBox[{"-", "30."}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KaiserLPFIR", "[", 
    RowBox[{"irLen_", ",", "pbCutoff_", ",", "sbCutoff_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Delta]1", ",", "\[Delta]2", ",", "\[Delta]", ",", "\[Omega]c", ",", 
       "d\[Omega]", ",", "A", ",", "\[Beta]", ",", "M", ",", "filterLen", ",",
        "\[Alpha]", ",", "filterIR"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Delta]1", "=", 
       RowBox[{"1.", "-", 
        RowBox[{"(", 
         RowBox[{"10.", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<PB Gain\>\"", "]"}], "/", 
            "20."}], ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]2", "=", 
       RowBox[{"10.", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<SB Gain\>\"", "]"}], "/", "20."}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"\[Delta]1", ",", "\[Delta]2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]c", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"pbCutoff", "+", "sbCutoff"}], ")"}], "/", "2."}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d\[Omega]", "=", 
       RowBox[{"sbCutoff", "-", "pbCutoff"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       RowBox[{
        RowBox[{"-", "20."}], 
        RowBox[{"Log10", "[", "\[Delta]", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"A", ">", "50"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Beta]", "=", 
          RowBox[{"0.1102", " ", 
           RowBox[{"(", 
            RowBox[{"A", "-", "8.7"}], ")"}]}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"A", "\[GreaterEqual]", "21"}], "&&", 
           RowBox[{"A", "\[LessEqual]", "50"}]}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"\[Beta]", "=", 
            RowBox[{
             RowBox[{"0.5842", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"A", "-", "21."}], ")"}], "0.4"]}], "+", 
             RowBox[{"0.07886", " ", 
              RowBox[{"(", 
               RowBox[{"A", "-", "21."}], ")"}]}]}]}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Beta]", "=", "0."}], ";"}]}], "\[IndentingNewLine]", 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"M", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", "-", "8."}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2.285", " ", "d\[Omega]"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"filterLen", "=", "irLen"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"filterLen", "<", 
         RowBox[{"(", 
          RowBox[{"M", "+", "1"}], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"filterLen", "=", 
          RowBox[{"M", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"M", "/", "2."}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"filterIR", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "filterLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filterIR", "[", 
        RowBox[{"[", 
         RowBox[{";;", 
          RowBox[{"M", "+", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Sinc", "[", 
         RowBox[{"\[Omega]c", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0.", ",", "M"}], "]"}], "-", "\[Alpha]"}], ")"}]}], 
         "]"}], 
        RowBox[{"(", 
         FractionBox["\[Omega]c", 
          RowBox[{"N", "[", "Pi", "]"}]], ")"}], 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"N", "[", "\[Beta]", "]"}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1.", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0.", ",", "M"}], "]"}], "-", "\[Alpha]"}], ")"}],
                   "/", "\[Alpha]"}], ")"}], "2."]}], "]"}]}]}], "]"}], 
          RowBox[{"BesselI", "[", 
           RowBox[{"0", ",", 
            RowBox[{"N", "[", "\[Beta]", "]"}]}], "]"}]], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"filterIR", "=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{"filterIR", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"filterLen", "-", 
             RowBox[{"(", 
              RowBox[{"M", "+", "1"}], ")"}]}], ")"}], "/", "2"}], "]"}]}], 
        "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lpResidual", "[", 
    RowBox[{"signal_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "autoCorrList", ",", "autoCorrMat", ",", "aVec", ",", "lpRes", ",", 
       "predVec"}], "}"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"autoCorrList", "=", 
       RowBox[{"autoCorrFunc", "[", 
        RowBox[{"signal", ",", 
         RowBox[{"p", "+", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"autoCorrMat", "=", 
       RowBox[{"ToeplitzMatrix", "[", 
        RowBox[{"autoCorrList", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aVec", "=", 
       RowBox[{
        RowBox[{"Inverse", "[", "autoCorrMat", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"autoCorrList", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lpRes", "=", "signal"}], ";", "\[IndentingNewLine]", 
      RowBox[{"predVec", "=", 
       RowBox[{
        RowBox[{"LowerTriangularize", "[", 
         RowBox[{"ToeplitzMatrix", "[", 
          RowBox[{"signal", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"PadRight", "[", 
         RowBox[{"aVec", ",", 
          RowBox[{
           RowBox[{"Length", "[", "signal", "]"}], "-", "1"}], ",", "0."}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lpRes", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"signal", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], "+", "predVec"}]}], ";", 
      "\[IndentingNewLine]", "lpRes"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"raisedCosWin", "[", 
    RowBox[{"winLen_", ",", 
     RowBox[{"r_", ":", " ", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.25"}], "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "winVec", ",", "rFinal"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0.", ",", 
         RowBox[{"1.", "-", 
          RowBox[{"(", 
           RowBox[{"1.", "/", "winLen"}], ")"}]}], ",", 
         RowBox[{"(", 
          RowBox[{"1.", "/", "winLen"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"winVec", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "winLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rFinal", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{"Abs", "[", "r", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", "rFinal", "]"}], ">", "0.5"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rFinal", "=", 
          RowBox[{"Clip", "[", 
           RowBox[{"rFinal", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"Clip", "[", 
               RowBox[{
                RowBox[{"Min", "[", "rFinal", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}], 
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rFinal", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"winVec", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Round", "[", 
              RowBox[{"winLen", " ", 
               RowBox[{"rFinal", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], "=", 
          
          RowBox[{"0.5", 
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"N", "[", "Pi", "]"}], 
                RowBox[{"rFinal", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", 
                    RowBox[{"Round", "[", 
                    RowBox[{"winLen", " ", 
                    RowBox[{"rFinal", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], "]"}], 
                 "-", 
                 RowBox[{"rFinal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}]}], 
            ")"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rFinal", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"winVec", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"winLen", "-", 
              RowBox[{"Round", "[", 
               RowBox[{"winLen", " ", 
                RowBox[{"rFinal", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "+", "1"}], ";;"}], 
            "]"}], "]"}], "=", 
          RowBox[{"0.5", 
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"N", "[", "Pi", "]"}], 
                RowBox[{"rFinal", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"winLen", "-", 
                    RowBox[{"Round", "[", 
                    RowBox[{"winLen", " ", 
                    RowBox[{"rFinal", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "+", "1"}], 
                    ";;"}], "]"}], "]"}], "-", "1", "+", 
                 RowBox[{"rFinal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}]}], 
            ")"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "winVec"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"resample", "[", 
    RowBox[{"inputSignal_", ",", "inputSR_", ",", "outputSR_"}], "]"}], ":=", 
   " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rationalR", ",", "outputSignal", ",", "L", ",", "M", ",", 
       "inputSignalLen", ",", "upsampSignal", ",", "upsampSigLen", ",", 
       "cutoff", ",", "lpfIR", ",", "lpfIRLen", ",", "maxLen", ",", 
       "upsampSignalPad", ",", "lpfIRPad", ",", "interpSignal"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rationalR", "=", 
       RowBox[{"Rationalize", "[", 
        RowBox[{"outputSR", "/", "inputSR"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"rationalR", " ", "\[Equal]", " ", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"outputSignal", "=", "inputSignal"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"L", "=", 
          RowBox[{"Numerator", "[", "rationalR", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"M", "=", 
          RowBox[{"Denominator", "[", "rationalR", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inputSignalLen", "=", 
          RowBox[{"Length", "[", "inputSignal", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"upsampSignal", "=", 
          RowBox[{"Upsample", "[", 
           RowBox[{"inputSignal", ",", "L"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"upsampSigLen", "=", 
          RowBox[{"Length", "[", "upsampSignal", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"cutoff", "=", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Pi", "/", "L"}], ",", 
            RowBox[{"Pi", "/", "M"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lpfIR", "=", 
          RowBox[{"L", " ", 
           RowBox[{"KaiserLPFIR", "[", 
            RowBox[{"upsampSigLen", ",", 
             RowBox[{"0.95", "cutoff"}], ",", "cutoff", ",", 
             RowBox[{"\"\<SB Gain\>\"", "\[Rule]", 
              RowBox[{"-", "60."}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lpfIRLen", "=", 
          RowBox[{"Length", "[", "lpfIR", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"maxLen", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"upsampSigLen", ",", "lpfIRLen"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"upsampSignalPad", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"upsampSignal", ",", "maxLen", ",", "0."}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lpfIRPad", "=", 
          RowBox[{"PadRight", "[", 
           RowBox[{"lpfIR", ",", "maxLen", ",", "0."}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"interpSignal", "=", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"conv", "[", 
             RowBox[{"upsampSignalPad", ",", "lpfIRPad"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{"maxLen", "/", "2"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"outputSignal", "=", 
          RowBox[{"Downsample", "[", 
           RowBox[{
            RowBox[{"interpSignal", "[", 
             RowBox[{"[", 
              RowBox[{";;", "upsampSigLen"}], "]"}], "]"}], ",", "M"}], 
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "outputSignal"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "signalOnset", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Threshold\>\"", "\[Rule]", "20."}], ",", 
     RowBox[{"\"\<Resampling\>\"", "\[Rule]", "1."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"signalOnset", "[", 
    RowBox[{"inputSignal_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "resampling", ",", "interpSignal", ",", "threshold", ",", 
       "onsetSample"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"resampling", "=", 
       RowBox[{"OptionValue", "[", "\"\<Resampling\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpSignal", "=", 
       RowBox[{"resample", "[", 
        RowBox[{"inputSignal", ",", "1.", ",", "resampling"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"threshold", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<Threshold\>\"", "]"}], "/", 
          "100."}], ")"}], " ", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "interpSignal", "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"onsetSample", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"interpSignal", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "\[GreaterEqual]", 
               "threshold"}], " ", "&"}], ")"}]}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "resampling"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TFtoIR", "[", "TF_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{"InverseFourier", "[", 
     RowBox[{"TF", ",", 
      RowBox[{"FourierParameters", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tukeyWin", "[", 
    RowBox[{"winLen_", ",", 
     RowBox[{"r_", ":", " ", "0.5"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "winVec"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0.", ",", 
         RowBox[{"1.", "-", 
          RowBox[{"(", 
           RowBox[{"1.", "/", "winLen"}], ")"}]}], ",", 
         RowBox[{"(", 
          RowBox[{"1.", "/", "winLen"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"winVec", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "winLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"r", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"winVec", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Round", "[", 
              RowBox[{"winLen", " ", 
               RowBox[{"r", "/", "2"}]}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{"0.5", 
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"2.", 
                 RowBox[{"N", "[", "Pi", "]"}]}], "r"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", 
                    RowBox[{"Round", "[", 
                    RowBox[{"winLen", " ", 
                    RowBox[{"r", "/", "2"}]}], "]"}]}], "]"}], "]"}], "-", 
                 RowBox[{"r", "/", "2"}]}], ")"}]}], "]"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"winVec", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"winLen", "-", 
              RowBox[{"Round", "[", 
               RowBox[{"winLen", " ", 
                RowBox[{"r", "/", "2"}]}], "]"}], "+", "1"}], ";;"}], "]"}], 
           "]"}], "=", 
          RowBox[{"0.5", 
           RowBox[{"(", 
            RowBox[{"1.", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"2.", 
                 RowBox[{"N", "[", "Pi", "]"}]}], "r"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"winLen", "-", 
                    RowBox[{"Round", "[", 
                    RowBox[{"winLen", " ", 
                    RowBox[{"r", "/", "2"}]}], "]"}], "+", "1"}], ";;"}], 
                   "]"}], "]"}], "-", "1", "+", 
                 RowBox[{"r", "/", "2"}]}], ")"}]}], "]"}]}], ")"}]}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "winVec"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unwrapPhase", "[", 
    RowBox[{"inputPhase_", ",", 
     RowBox[{"tol_", ":", " ", "\[Pi]"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"inputPhaseLen", ",", "unwrappedPhase"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inputPhaseLen", "=", 
       RowBox[{"Length", "[", "inputPhase", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"unwrappedPhase", "=", "inputPhase"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"inputPhase", "[", 
              RowBox[{"[", 
               RowBox[{"ii", "+", "1"}], "]"}], "]"}], "-", 
             RowBox[{"inputPhase", "[", 
              RowBox[{"[", "ii", "]"}], "]"}]}], "\[GreaterEqual]", "tol"}], 
           ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"unwrappedPhase", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"ii", "+", "1"}], ";;"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"unwrappedPhase", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"ii", "+", "1"}], ";;"}], "]"}], "]"}], "-", 
             RowBox[{"2", " ", "tol"}]}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"inputPhaseLen", "-", "1"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "unwrappedPhase"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "inverseFilter", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Regularization\>\"", "\[Rule]", "\"\<None\>\""}], ",", 
     RowBox[{"\"\<Regularization Ranges\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "1.", ",", "0."}], "}"}], "}"}]}], ",", 
     RowBox[{"\"\<SampleRate\>\"", "\[Rule]", "96000."}], ",", 
     RowBox[{"\"\<AvgFreqRange\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"100.", ",", "18000."}], "}"}]}], ",", 
     RowBox[{"\"\<InvFreqRange\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"20.", ",", "20000."}], "}"}]}], ",", 
     RowBox[{"\"\<MaxDynRange\>\"", "\[Rule]", "24."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inverseFilter", "[", 
    RowBox[{"h_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IRLen", ",", "H", ",", "z", ",", "\[Epsilon]", ",", "Fs", ",", 
       "maxDynRange", ",", "avgFRange", ",", "invFRange", ",", "fVec", ",", 
       "fLIndxAvg", ",", "fUIndxAvg", ",", "fLIndxInv", ",", "fUIndxInv", ",",
        "fLInv", ",", "fUInv", ",", "nyqIndx", ",", "magSpec", ",", "HAvg", 
       ",", "HNorm", ",", "HNormClip", ",", "tempHInv", ",", "bpfTF", ",", 
       "fullHInv", ",", "lfConstVal", ",", "hfConstVal", ",", "hpfTF", ",", 
       "lpfTF"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IRLen", " ", "=", " ", 
       RowBox[{"Length", "[", "h", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"H", " ", "=", " ", 
       RowBox[{"IRtoTF", "[", "h", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<Regularization\>\"", "]"}], 
        "\[IndentingNewLine]", ",", "\"\<None\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"z", " ", "=", " ", 
          RowBox[{"TFtoIR", "[", 
           FractionBox["1.", "H"], "]"}]}], ";"}], "\[IndentingNewLine]", 
        ",", "\"\<Piecewise\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Epsilon]", " ", "=", " ", 
          RowBox[{"piecewiseRegularization", "[", 
           RowBox[{"IRLen", ",", 
            RowBox[{
            "OptionValue", "[", "\"\<Regularization Ranges\>\"", "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"z", " ", "=", " ", 
          RowBox[{"TFtoIR", "[", 
           FractionBox[
            RowBox[{"Conjugate", "[", "H", "]"}], 
            RowBox[{
             RowBox[{
              RowBox[{"Conjugate", "[", "H", "]"}], "H"}], "+", 
             "\[Epsilon]"}]], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\"\<Custom\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Fs", "=", 
          RowBox[{"OptionValue", "[", "\"\<SampleRate\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"maxDynRange", "=", 
          RowBox[{"OptionValue", "[", "\"\<MaxDynRange\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"avgFRange", "=", 
          RowBox[{"OptionValue", "[", "\"\<AvgFreqRange\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"invFRange", "=", 
          RowBox[{"OptionValue", "[", "\"\<InvFreqRange\>\"", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fVec", "=", 
          RowBox[{"freqList", "[", 
           RowBox[{"IRLen", ",", "Fs"}], "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"fLIndxAvg", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"fVec", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{"fVec", ",", 
                RowBox[{"Min", "[", "avgFRange", "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fUIndxAvg", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"fVec", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{"fVec", ",", 
                RowBox[{"Max", "[", "avgFRange", "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fLIndxInv", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"fVec", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{"fVec", ",", 
                RowBox[{"Min", "[", "invFRange", "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fUIndxInv", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"fVec", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{"fVec", ",", 
                RowBox[{"Max", "[", "invFRange", "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fLInv", "=", 
          RowBox[{"fVec", "[", 
           RowBox[{"[", "fLIndxInv", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fUInv", "=", 
          RowBox[{"fVec", "[", 
           RowBox[{"[", "fUIndxInv", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nyqIndx", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"fVec", ",", 
             RowBox[{
              RowBox[{"Nearest", "[", 
               RowBox[{"fVec", ",", 
                RowBox[{"Fs", "/", "2."}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"magSpec", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{"H", "[", 
            RowBox[{"[", 
             RowBox[{"fLIndxAvg", ";;", "fUIndxAvg"}], "]"}], "]"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"HAvg", "=", 
          RowBox[{"logMean", "[", 
           RowBox[{
            RowBox[{"fVec", "[", 
             RowBox[{"[", 
              RowBox[{"fLIndxAvg", ";;", "fUIndxAvg"}], "]"}], "]"}], ",", 
            "magSpec"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"HNorm", "=", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "nyqIndx"}], "]"}], "]"}], "/", "HAvg"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"HNormClip", "=", 
          RowBox[{
           RowBox[{"dBToMag", "[", 
            RowBox[{"Clip", "[", 
             RowBox[{
              RowBox[{"magTodB", "[", 
               RowBox[{"Abs", "[", "HNorm", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "maxDynRange"}], "/", "2."}], ",", 
                RowBox[{"maxDynRange", "/", "2."}]}], "}"}]}], "]"}], "]"}], 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"Arg", "[", "HNorm", "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tempHInv", "=", 
          RowBox[{"1.", "/", "HNormClip"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Method", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"bpfTF", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{"IRtoTF", "[", 
            RowBox[{"getButterworthFIR", "[", 
             RowBox[{"IRLen", ",", "4", ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"fLInv", ",", "fUInv"}], "}"}], "/", 
               RowBox[{"(", 
                RowBox[{"Fs", "/", "2."}], ")"}]}], ",", "\"\<Bandpass\>\""}],
              "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lfConstVal", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{"tempHInv", "[", 
            RowBox[{"[", "fLIndxInv", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"hfConstVal", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{"tempHInv", "[", 
            RowBox[{"[", "fUIndxInv", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tempHInv", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "fLIndxInv"}], "]"}], "]"}], "=", 
          RowBox[{"lfConstVal", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"Arg", "[", 
              RowBox[{"tempHInv", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "fLIndxInv"}], "]"}], "]"}], "]"}]}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tempHInv", "[", 
           RowBox[{"[", 
            RowBox[{"fUIndxInv", ";;", "nyqIndx"}], "]"}], "]"}], "=", 
          RowBox[{"hfConstVal", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", 
             RowBox[{"Arg", "[", 
              RowBox[{"tempHInv", "[", 
               RowBox[{"[", 
                RowBox[{"fUIndxInv", ";;", "nyqIndx"}], "]"}], "]"}], "]"}]}],
             "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tempHInv", "=", 
          RowBox[{"tempHInv", " ", 
           RowBox[{"bpfTF", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "nyqIndx"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Method", " ", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"hpfTF", "=", 
            RowBox[{"Abs", "[", 
             RowBox[{"IRtoTF", "[", 
              RowBox[{"getButterworthFIR", "[", 
               RowBox[{"IRLen", ",", "4", ",", 
                RowBox[{"fLInv", "/", 
                 RowBox[{"(", 
                  RowBox[{"Fs", "/", "2."}], ")"}]}], ",", 
                "\"\<Highpass\>\""}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lpfTF", "=", 
            RowBox[{"Abs", "[", 
             RowBox[{"IRtoTF", "[", 
              RowBox[{"getButterworthFIR", "[", 
               RowBox[{"IRLen", ",", "4", ",", 
                RowBox[{"fUInv", "/", 
                 RowBox[{"(", 
                  RowBox[{"Fs", "/", "2."}], ")"}]}], ",", 
                "\"\<Lowpass\>\""}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lfConstVal", "=", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"tempHInv", "[", 
               RowBox[{"[", "fLIndxInv", "]"}], "]"}], "]"}], "/", 
             RowBox[{"hpfTF", "[", 
              RowBox[{"[", "fLIndxInv", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"hfConstVal", "=", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"tempHInv", "[", 
               RowBox[{"[", "fUIndxInv", "]"}], "]"}], "]"}], "/", 
             RowBox[{"lpfTF", "[", 
              RowBox[{"[", "fUIndxInv", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tempHInv", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "fLIndxInv"}], "]"}], "]"}], "=", 
            RowBox[{"lfConstVal", " ", 
             RowBox[{"hpfTF", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "fLIndxInv"}], "]"}], "]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"Arg", "[", 
                RowBox[{"tempHInv", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "fLIndxInv"}], "]"}], "]"}], "]"}]}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tempHInv", "[", 
             RowBox[{"[", 
              RowBox[{"fUIndxInv", ";;", "nyqIndx"}], "]"}], "]"}], "=", 
            RowBox[{"hfConstVal", " ", 
             RowBox[{"lpfTF", "[", 
              RowBox[{"[", 
               RowBox[{"fUIndxInv", ";;", "nyqIndx"}], "]"}], "]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"Arg", "[", 
                RowBox[{"tempHInv", "[", 
                 RowBox[{"[", 
                  RowBox[{"fUIndxInv", ";;", "nyqIndx"}], "]"}], "]"}], 
                "]"}]}], "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", "IRLen", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"fullHInv", "=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"tempHInv", ",", 
                RowBox[{"Drop", "[", 
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"Conjugate", "[", "tempHInv", "]"}], ",", "1"}], 
                    "]"}], "]"}], ",", "1"}], "]"}]}], "]"}], "/", "HAvg"}]}],
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"fullHInv", "=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"tempHInv", ",", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Drop", "[", 
                  RowBox[{
                   RowBox[{"Conjugate", "[", "tempHInv", "]"}], ",", "1"}], 
                  "]"}], "]"}]}], "]"}], "/", "HAvg"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"z", "=", 
          RowBox[{"TFtoIR", "[", "fullHInv", "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "z"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"piecewiseRegularization", "[", 
    RowBox[{"N_", ",", "\[Epsilon]List_"}], " ", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"regPoints", ",", "regFn", ",", "regHalf", ",", "regFull"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"regPoints", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Epsilon]List", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"\[Epsilon]List", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Epsilon]List", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"\[Epsilon]List", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", 
              RowBox[{"Length", "[", "\[Epsilon]List", "]"}]}], "}"}]}], 
           "]"}], ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"regFn", " ", "=", " ", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"regPoints", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"regHalf", " ", "=", " ", 
       RowBox[{"regFn", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"0.", ",", "1.", ",", 
          FractionBox["2.", "N"]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "N", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"regFull", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"regHalf", ",", 
            RowBox[{"Reverse", "[", 
             RowBox[{"regHalf", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"regFull", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"regHalf", ",", 
            RowBox[{"Reverse", "[", 
             RowBox[{"regHalf", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}],
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "regFull"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "HatzOctaveSmoothPS", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Smoothing Factor\>\"", "\[Rule]", "3."}], ",", 
     RowBox[{"\"\<Window\>\"", "\[Rule]", "\"\<Hann\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HatzOctaveSmoothPS", "[", 
    RowBox[{"inputPowerSpectrum_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "powerSpectrumLen", ",", "nyqIndex", ",", "oSFrac", ",", "oSWinType", 
       ",", "Pf", ",", "mk", ",", "mkMax", ",", "b", ",", "Wsm", ",", 
       "smoothedPSHalf", ",", "smoothedPS"}], "}"}], "\[IndentingNewLine]", 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"powerSpectrumLen", "=", 
       RowBox[{"Length", "[", "inputPowerSpectrum", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nyqIndex", "=", 
       RowBox[{"Ceiling", "[", 
        FractionBox[
         RowBox[{"powerSpectrumLen", "+", "1"}], "2"], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"oSFrac", "=", 
       RowBox[{"OptionValue", "[", "\"\<Smoothing Factor\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"oSWinType", "=", 
       RowBox[{"OptionValue", "[", "\"\<Window\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Pf", " ", "=", " ", 
       RowBox[{
        SuperscriptBox["2", 
         FractionBox["0.5", "oSFrac"]], "-", 
        SuperscriptBox["0.5", 
         FractionBox["0.5", "oSFrac"]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mk", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Range", "[", "nyqIndex", "]"}], "-", "1"}], ")"}], "2"], 
         " ", "Pf"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mk", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{"mk", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"nyqIndex", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mkMax", "=", 
       RowBox[{"Max", "[", "mk", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "oSWinType", ",", "\[IndentingNewLine]", "\"\<Rectangular\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
        ",", "\"\<Hann\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
        ",", "\"\<Hamming\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b", " ", "=", " ", "0.54"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wsm", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"mkMax", ",", "powerSpectrumLen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Wsm", "[", 
           RowBox[{"[", 
            RowBox[{"m", ",", 
             RowBox[{"1", ";;", 
              RowBox[{"m", "+", "1"}]}]}], "]"}], "]"}], "=", 
          FractionBox[
           RowBox[{"b", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", "-", "1."}], ")"}], 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"N", "[", "\[Pi]", "]"}], "/", "m"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "m"}], ",", "0."}], "]"}], ")"}]}], "]"}]}]}], 
           
           RowBox[{
            RowBox[{"2.", " ", "b", " ", 
             RowBox[{"(", 
              RowBox[{"m", "+", "1"}], ")"}]}], " ", "-", "1."}]]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Wsm", "[", 
           RowBox[{"[", 
            RowBox[{"m", ",", 
             RowBox[{
              RowBox[{"m", "+", "2"}], ";;", 
              RowBox[{
               RowBox[{"2", "m"}], "+", "1"}]}]}], "]"}], "]"}], "=", 
          FractionBox[
           RowBox[{"b", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", "-", "1."}], ")"}], 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"N", "[", "\[Pi]", "]"}], "/", "m"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"2.", ",", 
                   RowBox[{"m", "+", "1."}]}], "]"}], "-", "1."}], ")"}]}], 
              "]"}]}]}], 
           RowBox[{
            RowBox[{"2.", " ", "b", " ", 
             RowBox[{"(", 
              RowBox[{"m", "+", "1"}], ")"}]}], " ", "-", "1."}]]}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "mkMax"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"smoothedPSHalf", "=", 
       RowBox[{"inputPowerSpectrum", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "nyqIndex"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"smoothedPSHalf", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"nyqIndex", "-", "1"}]}], "]"}], "]"}], "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"inputPowerSpectrum", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"ii", "-", 
               RowBox[{"mk", "[", 
                RowBox[{"[", "ii", "]"}], "]"}]}], ";;", 
              RowBox[{"ii", "+", 
               RowBox[{"mk", "[", 
                RowBox[{"[", "ii", "]"}], "]"}]}]}], "]"}], "]"}], " ", 
           RowBox[{"Wsm", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"mk", "[", 
               RowBox[{"[", "ii", "]"}], "]"}], ",", 
              RowBox[{"1", ";;", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"mk", "[", 
                   RowBox[{"[", "ii", "]"}], "]"}]}], "+", "1"}], ")"}]}]}], 
             "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "2", ",", 
           RowBox[{"nyqIndex", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "powerSpectrumLen", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"smoothedPS", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"smoothedPSHalf", ",", 
            RowBox[{"Reverse", "[", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"smoothedPSHalf", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
         ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"smoothedPS", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"smoothedPSHalf", ",", 
            RowBox[{"Reverse", "[", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"smoothedPSHalf", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "smoothedPS"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteAnalyticSignal", "[", "inputSignal_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inputSignalReal", ",", "inputSignalRealDFT", ",", 
       "inputSignalRealLength", ",", "inputSignalRealHalfLength", ",", 
       "hilbertDFT", ",", "outputSignal"}], "}"}], "\[IndentingNewLine]", ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inputSignalReal", "=", 
       RowBox[{"Re", "[", "inputSignal", "]"}]}], ";", 
      RowBox[{"inputSignalRealDFT", "=", 
       RowBox[{"IRtoTF", "[", "inputSignalReal", "]"}]}], ";", 
      RowBox[{"inputSignalRealLength", "=", 
       RowBox[{"Length", "[", "inputSignalReal", "]"}]}], ";", 
      RowBox[{"inputSignalRealHalfLength", "=", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"inputSignalRealLength", "+", "1"}], ")"}], "/", "2"}], 
        "]"}]}], ";", 
      RowBox[{"hilbertDFT", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "inputSignalRealLength"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "inputSignalRealLength", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"hilbertDFT", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", "1."}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hilbertDFT", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", 
             RowBox[{"inputSignalRealHalfLength", "-", "1"}]}], "]"}], "]"}], 
          "=", "2."}], ";", 
         RowBox[{
          RowBox[{"hilbertDFT", "[", 
           RowBox[{"[", "inputSignalRealHalfLength", "]"}], "]"}], "=", 
          "1."}], ";"}], "\[IndentingNewLine]", ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"hilbertDFT", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", "1."}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"hilbertDFT", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", "inputSignalRealHalfLength"}], "]"}], "]"}], 
          "=", "2."}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"outputSignal", "=", 
       RowBox[{"TFtoIR", "[", 
        RowBox[{"inputSignalRealDFT", " ", "hilbertDFT"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"envelopeSignal", "[", "inputSignal_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inputSignalMean", ",", "currentSignal", ",", "positiveEnvelope", ",", 
       "negativeEnvelope", ",", "outputSignal"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inputSignalMean", "=", 
       RowBox[{"Mean", "[", "inputSignal", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"currentSignal", "=", 
       RowBox[{"inputSignal", "-", "inputSignalMean"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"positiveEnvelope", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"discreteAnalyticSignal", "[", "currentSignal", "]"}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"negativeEnvelope", "=", 
       RowBox[{"-", "positiveEnvelope"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputSignal", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"positiveEnvelope", ",", "negativeEnvelope"}], "}"}], "+", 
        "inputSignalMean"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HilbertTransform", "[", "inputSignal_", "]"}], " ", ":=", " ", 
   RowBox[{"Im", "[", 
    RowBox[{"discreteAnalyticSignal", "[", "inputSignal", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAllPassIR", "[", "inputIR_", "]"}], " ", ":=", " ", 
   RowBox[{"deconv", "[", 
    RowBox[{"inputIR", ",", 
     RowBox[{"getMinimumPhaseIR", "[", "inputIR", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getMinimumPhaseIR", "[", "inputIR_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "irLen", ",", "rCeps", ",", "win", ",", "irHalfLen", ",", 
       "minPhaseIR"}], "}"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"irLen", "=", 
       RowBox[{"Length", "[", "inputIR", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"rCeps", "=", 
       RowBox[{"TFtoIR", "[", 
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"IRtoTF", "[", "inputIR", "]"}], "]"}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"win", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "irLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"irHalfLen", "=", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"irLen", "+", "1"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"win", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", "1."}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"win", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"irHalfLen", "-", "1"}]}], "]"}], "]"}], "=", "2."}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "irLen", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"win", "[", 
           RowBox[{"[", "irHalfLen", "]"}], "]"}], "=", "1."}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"win", "[", 
           RowBox[{"[", "irHalfLen", "]"}], "]"}], "=", "2."}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minPhaseIR", "=", 
       RowBox[{"TFtoIR", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"IRtoTF", "[", 
          RowBox[{"win", " ", "rCeps"}], "]"}], "]"}], "]"}]}]}]}], "\n", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realCepstrum", "[", "inputSignal_", "]"}], ":=", 
   RowBox[{"Re", "[", 
    RowBox[{"TFtoIR", "[", 
     RowBox[{"Log", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"IRtoTF", "[", "inputSignal", "]"}], "]"}], "]"}], "]"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "getBalancedIR", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Order\>\"", "\[Rule]", "0"}], ",", 
     RowBox[{"\"\<Sampling Rate\>\"", "\[Rule]", "44100."}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBalancedIR", "[", 
    RowBox[{"inputIR_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "iR", ",", "irLen", ",", "order", ",", "hankelMat", ",", "uMat", ",", 
       "sigmaMat", ",", "vMat", ",", "hatA", ",", "hatB", ",", "hatC", ",", 
       "hatD", ",", "fS", ",", "sys", ",", "sysIR"}], "}"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"iR", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", "inputIR"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"irLen", "=", 
       RowBox[{"Length", "[", "iR", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"order", "=", 
       RowBox[{"OptionValue", "[", "\"\<Order\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fS", "=", 
       RowBox[{"OptionValue", "[", "\"\<Sampling Rate\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[LessEqual]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"order", "=", 
          RowBox[{"irLen", "-", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"order", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"order", ",", "irLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"hankelMat", "=", 
       RowBox[{"HankelMatrix", "[", "iR", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"uMat", ",", "sigmaMat", ",", "vMat"}], "}"}], "=", 
       RowBox[{"SingularValueDecomposition", "[", "hankelMat", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hatA", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"vMat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", ";;", "irLen"}], ",", 
            RowBox[{"1", ";;", "order"}]}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"vMat", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", 
            RowBox[{"(", 
             RowBox[{"irLen", "-", "1"}], ")"}]}], ",", 
           RowBox[{"1", ";;", "order"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hatB", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"vMat", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"1", ";;", "order"}]}], "]"}], "]"}], "}"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"hatC", "=", 
       RowBox[{"{", 
        RowBox[{"iR", ".", 
         RowBox[{"vMat", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "irLen"}], ",", 
            RowBox[{"1", ";;", "order"}]}], "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hatD", "=", 
       RowBox[{"{", 
        RowBox[{"{", "0", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sys", "=", 
       RowBox[{"StateSpaceModel", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"hatA", ",", "hatB", ",", "hatC", ",", "hatD"}], "}"}], ",", 
         RowBox[{"SamplingPeriod", "\[Rule]", 
          RowBox[{"1", "/", "fS"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sysIR", "=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"OutputResponse", "[", 
          RowBox[{"sys", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "1.", "}"}], ",", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0.", ",", 
               RowBox[{
                RowBox[{"Length", "[", "inputIR", "]"}], "-", "1"}]}], 
              "]"}]}], "]"}]}], "]"}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSPLNorm", "[", 
    RowBox[{"refSPL_", ":", " ", "105."}], "]"}], ":=", 
   RowBox[{"10.", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "refSPL"}], "/", "20."}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sweepToIR", "[", 
    RowBox[{"sweepFilePath_", ",", 
     RowBox[{"numOuts_", ":", "1"}], ",", 
     RowBox[{"fRange_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sweepDur_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"phaseFlag_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawData", ",", "numCh", ",", "Fs", ",", "numMics", ",", "fileLen", ",",
        "FFTLen", ",", "filtFlagLP", ",", "filtFlagHP", ",", "fL", ",", "fU", 
       ",", "rawMicData", ",", "sweepSignal", ",", "triggerSignal", ",", 
       "meanVals", ",", "meanValMat", ",", "triggerPositions", ",", 
       "interSweepDelay", ",", "numSweeps", ",", "snrSpec", ",", "bNList", 
       ",", "bNLen", ",", "sigStart", ",", "sigEnd", ",", "signal", ",", 
       "psdSig", ",", "psdBN", ",", "micIRs", ",", "IRLen", ",", "IRList", 
       ",", "startPos", ",", "endPos", ",", "indxLen", ",", "outData", ",", 
       "totSigLen", ",", "filtLen", ",", "hpFiltIR", ",", "lpFiltIR", ",", 
       "shiftAmt", ",", "longPreOnset", ",", "roughOnset", ",", "fadeLen"}], 
      "}"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "sweepFilePath", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rawData", ",", "numCh"}], "}"}], "=", 
          RowBox[{"importAudio", "[", "sweepFilePath", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Fs", "=", 
          RowBox[{"getSamplingRate", "[", "sweepFilePath", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"numMics", "=", 
          RowBox[{"numCh", "-", "2"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Remaining", " ", "two", " ", "channels", " ", "are", " ", "sweep",
             " ", "and", " ", "trigger", " ", "signal", " ", "channels"}], 
           ",", " ", 
           RowBox[{"respectively", "."}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"fileLen", " ", "=", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "rawData", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"FFTLen", " ", "=", " ", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"nextPowTwo", "[", "fileLen", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "fRange", "]"}], "\[NotEqual]", "2"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"filtFlagHP", "=", "False"}], ";", "\[IndentingNewLine]", 
            
            RowBox[{"filtFlagLP", "=", "False"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"fL", "=", 
             RowBox[{"Min", "[", "fRange", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"fL", ">", "0."}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"filtFlagHP", "=", "True"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"filtFlagHP", "=", "False"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"fU", "=", 
             RowBox[{"Max", "[", "fRange", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"fU", "\[GreaterEqual]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Fs", "-", "1"}], ")"}], "/", "2"}]}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"Fs", "-", 
                 RowBox[{
                 "1", " ", "instead", " ", "of", " ", "Fs", " ", "to", " ", 
                  "ensure", " ", "that", " ", "the", " ", "case", " ", 
                  "fU"}]}], " ", "=", " ", 
                RowBox[{
                 RowBox[{"Fs", "/", "2"}], " ", "is", " ", "not", " ", 
                 "missed", " ", "due", " ", "to", " ", "rounding", " ", 
                 RowBox[{"errors", "."}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"filtFlagLP", "=", "False"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"filtFlagLP", "=", "True"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"rawMicData", "=", 
          RowBox[{"rawData", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "numMics"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sweepSignal", "=", 
          RowBox[{"rawData", "[", 
           RowBox[{"[", 
            RowBox[{"numCh", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"triggerSignal", "=", 
          RowBox[{"rawData", "[", 
           RowBox[{"[", "numCh", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Remove", " ", "any", " ", "DC", " ", "offset", " ", "from", " ", 
           "raw", " ", "microphone", " ", "signals"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"meanVals", "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"Transpose", "[", "rawMicData", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"meanValMat", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"meanVals", ",", "fileLen"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rawMicData", "=", 
          RowBox[{"rawMicData", "-", 
           RowBox[{"Transpose", "[", "meanValMat", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"triggerPositions", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"Round", "[", "triggerSignal", "]"}], ",", "1"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"interSweepDelay", " ", "=", " ", 
          RowBox[{"Round", "[", 
           RowBox[{"Mean", "[", 
            RowBox[{"Differences", "[", "triggerPositions", "]"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"numSweeps", "=", 
          RowBox[{"Length", "[", "triggerPositions", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Estimate", " ", "signal"}], "-", "to", "-", 
           RowBox[{"noise", " ", "ratio"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"numOuts", " ", ">", " ", "3"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"triggerPositions", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "3"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "MessageDialog", "[", 
               "\"\<Unable to estimate signal-to-noise ratio.\>\"", "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"snrSpec", "=", 
               RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"bNList", "=", 
               RowBox[{"rawMicData", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"1", ";;", 
                   RowBox[{"triggerPositions", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"bNLen", "=", 
               RowBox[{
                RowBox[{"Dimensions", "[", "bNList", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"bNLen", "/", "Fs"}], "<", "0.001"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "MessageDialog", "[", 
                  "\"\<Signal-to-noise ratio estimate may not be \
accurate.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"sigStart", "=", 
               RowBox[{"triggerPositions", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "sweepDur", "]"}], "\[Equal]", "0"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"totSigLen", "=", 
                  RowBox[{"sigStart", "+", 
                   RowBox[{"numSweeps", " ", "interSweepDelay"}], "-", 
                   "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"totSigLen", "=", 
                  RowBox[{"sigStart", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"numSweeps", "-", "1"}], ")"}], " ", 
                    "interSweepDelay"}], "+", 
                   RowBox[{"(", 
                    RowBox[{"sweepDur", " ", "Fs"}], ")"}], "-", "1"}]}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"sigEnd", "=", 
               RowBox[{"Min", "[", 
                RowBox[{"{", 
                 RowBox[{"fileLen", ",", "totSigLen"}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"signal", "=", 
               RowBox[{"rawMicData", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", 
                  RowBox[{"sigStart", ";;", "sigEnd"}]}], "]"}], "]"}]}], ";",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"snrSpec", "=", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"0.", ",", "numMics"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"psdBN", "=", 
                  RowBox[{"PeriodogramArray", "[", 
                   RowBox[{
                    RowBox[{"bNList", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}], ",", "bNLen", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"bNLen", "/", "2"}], "]"}], ",", "HannWindow", 
                    ",", "interSweepDelay"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"psdSig", "=", 
                  RowBox[{"PeriodogramArray", "[", 
                   RowBox[{
                    RowBox[{"signal", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}], ",", "interSweepDelay", 
                    ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"interSweepDelay", "/", "2"}], "]"}], ",", 
                    "HannWindow", ",", "interSweepDelay"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"snrSpec", "[", 
                   RowBox[{"[", "ii", "]"}], "]"}], "=", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"psdSig", "/", "psdBN"}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"snrSpec", "=", 
             RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Perform", " ", "\"\<exact\>\"", " ", "deconvolution"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"micIRs", " ", "=", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.", ",", "numMics"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"micIRs", "[", 
              RowBox[{"[", "ii", "]"}], "]"}], " ", "=", " ", 
             RowBox[{"deconv", "[", 
              RowBox[{
               RowBox[{"PadRight", "[", 
                RowBox[{
                 RowBox[{"rawMicData", "[", 
                  RowBox[{"[", "ii", "]"}], "]"}], ",", "FFTLen", ",", "0."}],
                 "]"}], ",", 
               RowBox[{"PadRight", "[", 
                RowBox[{"sweepSignal", ",", "FFTLen", ",", "0."}], "]"}]}], 
              "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"numSweeps", ">", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"IRLen", " ", "=", " ", "interSweepDelay"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"IRLen", " ", "=", " ", "FFTLen"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"IRList", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"numMics", ",", "numSweeps"}], "}"}]}], "]"}]}], ";", 
         " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "numMics", " ", "rows", " ", "correspond", " ", "to", " ", "each", 
           " ", "of", " ", "the", " ", "recording", " ", 
           RowBox[{"points", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"startPos", " ", "=", " ", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"jj", "-", "1"}], ")"}], " ", "IRLen"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"endPos", " ", "=", " ", 
             RowBox[{"Min", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "startPos", " ", "+", " ", "IRLen", " ", "-", " ", "1"}], ",",
                 "FFTLen"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"indxLen", " ", "=", " ", 
             RowBox[{"endPos", "-", "startPos", "+", "1"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"IRList", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", "jj"}], "]"}], "]"}], " ", "=", " ", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0.", ",", "IRLen"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"IRList", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", "jj", ",", 
                   RowBox[{"1", ";;", "indxLen"}]}], "]"}], "]"}], " ", "=", 
                " ", 
                RowBox[{"micIRs", "[", 
                 RowBox[{"[", 
                  RowBox[{"ii", ",", 
                   RowBox[{"startPos", ";;", "endPos"}]}], "]"}], "]"}]}], 
               ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}]}], "]"}], 
            ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jj", ",", "1", ",", "numSweeps"}], "}"}]}], "]"}], ";"}],
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", "\"\<Invalid sweep file path. Aborting...\>\"",
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "IRLen", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"filtLen", "=", 
          RowBox[{"IRLen", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"filtLen", "=", "IRLen"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Apply", " ", "high"}], "-", 
        RowBox[{"pass", " ", "filter", " ", "if", " ", "required"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"filtFlagHP", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hpFiltIR", "=", 
          RowBox[{"getButterworthFIR", "[", 
           RowBox[{"filtLen", ",", "4", ",", 
            RowBox[{"fL", "/", 
             RowBox[{"(", 
              RowBox[{"Fs", "/", "2."}], ")"}]}], ",", "\"\<Highpass\>\""}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"phaseFlag", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"shiftAmt", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"filtLen", "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"hpFiltIR", "=", 
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"TFtoIR", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"IRtoTF", "[", "hpFiltIR", "]"}], "]"}], "]"}], ",", 
               "shiftAmt"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"shiftAmt", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"IRList", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "jj"}], "]"}], "]"}], "=", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{
               RowBox[{"conv", "[", 
                RowBox[{
                 RowBox[{"IRList", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", "jj"}], "]"}], "]"}], ",", "hpFiltIR", 
                 ",", "\"\<lin\>\""}], "]"}], ",", "shiftAmt"}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"IRList", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "jj"}], "]"}], "]"}], "=", 
             RowBox[{"IRList", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "jj", ",", 
                RowBox[{"1", ";;", "IRLen"}]}], "]"}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jj", ",", "1", ",", "numSweeps"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Apply", " ", "low"}], "-", 
        RowBox[{"pass", " ", "filter", " ", "if", " ", "required"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"filtFlagLP", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"lpFiltIR", "=", 
          RowBox[{"getButterworthFIR", "[", 
           RowBox[{"filtLen", ",", "4", ",", 
            RowBox[{"fU", "/", 
             RowBox[{"(", 
              RowBox[{"Fs", "/", "2."}], ")"}]}], ",", "\"\<Lowpass\>\""}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"phaseFlag", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"shiftAmt", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"filtLen", "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lpFiltIR", "=", 
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"TFtoIR", "[", 
                RowBox[{"Abs", "[", 
                 RowBox[{"IRtoTF", "[", "lpFiltIR", "]"}], "]"}], "]"}], ",", 
               "shiftAmt"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"shiftAmt", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"IRList", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "jj"}], "]"}], "]"}], "=", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{
               RowBox[{"conv", "[", 
                RowBox[{
                 RowBox[{"IRList", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", "jj"}], "]"}], "]"}], ",", "lpFiltIR", 
                 ",", "\"\<lin\>\""}], "]"}], ",", "shiftAmt"}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"IRList", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "jj"}], "]"}], "]"}], "=", 
             RowBox[{"IRList", "[", 
              RowBox[{"[", 
               RowBox[{"ii", ",", "jj", ",", 
                RowBox[{"1", ";;", "IRLen"}]}], "]"}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"jj", ",", "1", ",", "numSweeps"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Window", " ", "IRs", " ", "to", " ", "remove", " ", "any", " ", 
        "early", " ", "artifacts", " ", "due", " ", "to", " ", "above", " ", 
        "filtering"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"longPreOnset", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"15.", " ", 
         RowBox[{"Fs", "/", "1000."}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"15", " ", "ms"}], " ", "-", " ", 
        RowBox[{"sound", " ", "travels", " ", 
         RowBox[{"approx", ".", " ", "5"}], " ", "m", " ", "in", " ", "this", 
         " ", "time"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"roughOnset", "=", 
          RowBox[{"signalOnset", "[", 
           RowBox[{
            RowBox[{"IRList", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"\"\<Threshold\>\"", "\[Rule]", "50."}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fadeLen", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"0.", ",", 
            RowBox[{"roughOnset", "-", "longPreOnset"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"IRList", "[", 
           RowBox[{"[", 
            RowBox[{"ii", ",", "jj"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"IRList", "[", 
            RowBox[{"[", 
             RowBox[{"ii", ",", "jj"}], "]"}], "]"}], 
           RowBox[{"raisedCosWin", "[", 
            RowBox[{"IRLen", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"fadeLen", "/", "IRLen"}], ",", "0.05"}], "}"}]}], 
            "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "numSweeps"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "numOuts", "\[IndentingNewLine]", ",", "1", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"outData", "=", "IRList"}], ";"}], "\[IndentingNewLine]", 
        ",", "2", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"outData", "=", 
          RowBox[{"{", 
           RowBox[{"IRList", ",", "Fs"}], "}"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "3", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"outData", "=", 
          RowBox[{"{", 
           RowBox[{"IRList", ",", "Fs", ",", "sweepSignal"}], "}"}]}], ";"}], 
        "\[IndentingNewLine]", ",", "4", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"outData", "=", 
          RowBox[{"{", 
           RowBox[{"IRList", ",", "Fs", ",", "sweepSignal", ",", "snrSpec"}], 
           "}"}]}], ";"}], "\[IndentingNewLine]", ",", "_", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "MessageDialog", "[", 
          "\"\<Must request between 1 and 4 outputs only. Aborting...\>\"", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "outData"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getForwardSTFT", "[", 
    RowBox[{"X_", ",", "WinLen_", ",", "Overlap_", ",", 
     RowBox[{"WinFun_", ":", "DirichletWindow"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"XLen", ",", "HopLen", ",", "XPadLen", ",", "XPad"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"XLen", " ", "=", " ", 
       RowBox[{"Length", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HopLen", " ", "=", " ", 
       RowBox[{"WinLen", " ", "-", " ", "Overlap"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XPadLen", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            FractionBox[
             RowBox[{"XLen", "+", "WinLen", "-", "Overlap"}], "HopLen"], 
            "]"}], "-", "1"}], ")"}], "HopLen"}], " ", "+", " ", "WinLen"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"XPad", " ", "=", " ", 
       RowBox[{"PadRight", "[", 
        RowBox[{
         RowBox[{"PadLeft", "[", 
          RowBox[{"X", ",", 
           RowBox[{"XLen", "+", "HopLen"}], ",", "0."}], "]"}], ",", 
         "XPadLen", ",", "0."}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SpectrogramArray", "[", 
       RowBox[{"XPad", ",", "WinLen", ",", 
        RowBox[{"WinLen", "-", "Overlap"}], ",", "WinFun"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInverseSTFT", "[", 
    RowBox[{"Y_", ",", "WinLen_", ",", "Overlap_", ",", 
     RowBox[{"WinFun_", ":", "DirichletWindow"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Win", ",", "HopLen", ",", "XLen", ",", "XMat", ",", "X", ",", "WinSum",
        ",", "indx"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Win", " ", "=", " ", 
       RowBox[{"WinFun", "[", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "0.5", ",", 
          FractionBox["1.", 
           RowBox[{"WinLen", "-", "1."}]]}], "]"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"HopLen", " ", "=", " ", 
       RowBox[{"WinLen", "-", "Overlap"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"XLen", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "Y", "]"}], "-", "1"}], ")"}], "HopLen"}], 
        "+", "WinLen"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"XMat", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"InverseFourier", "[", 
           RowBox[{"#", " ", ",", 
            RowBox[{"FourierParameters", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "&"}], "/@", "Y"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"X", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "XLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"WinSum", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.", ",", "XLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"indx", " ", "=", " ", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "WinLen"}], "]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ii", "-", "1"}], ")"}], 
            RowBox[{"(", 
             RowBox[{"WinLen", "-", "Overlap"}], ")"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "indx", "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "indx", "]"}], "]"}], "+", 
           RowBox[{"Win", " ", 
            RowBox[{"XMat", "[", 
             RowBox[{"[", "ii", "]"}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WinSum", "[", 
           RowBox[{"[", "indx", "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"WinSum", "[", 
            RowBox[{"[", "indx", "]"}], "]"}], " ", "+", " ", 
           SuperscriptBox["Win", "2."]}]}], ";"}], "\[IndentingNewLine]", ",",
         "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"Length", "[", "Y", "]"}]}], "}"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"HopLen", "+", "1"}], ")"}], ";;", 
          RowBox[{"(", 
           RowBox[{"XLen", "-", "Overlap"}], ")"}]}], "]"}], "]"}], 
       RowBox[{"WinSum", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"HopLen", "+", "1"}], ")"}], ";;", 
          RowBox[{"(", 
           RowBox[{"XLen", "-", "Overlap"}], ")"}]}], "]"}], "]"}]]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addTFs", "[", 
    RowBox[{"H1_", ",", "H2_", ",", 
     RowBox[{"mode_", ":", " ", "\"\<Correlated\>\""}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sum", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{
       "mode", ",", "\[IndentingNewLine]", "\"\<Correlated\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sum", "=", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"H1", "+", "H2"}], "]"}], "2."]}], ",", 
        "\[IndentingNewLine]", "\"\<Uncorrelated\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"sum", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", "H1", "]"}], "2."], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", "H2", "]"}], "2."]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "sum"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"forceConjugateSymmetry", "[", "H_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"hLen", ",", "HSym"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hLen", "=", 
       RowBox[{"Length", "[", "H", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HSym", "=", "H"}], ";", " ", 
      RowBox[{"(*", " ", "Initialize", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"HSym", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"Re", "[", 
        RowBox[{"H", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"DC", " ", "is", " ", "real"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "hLen", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"HSym", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"hLen", "/", "2"}], ")"}], "+", "1"}], "]"}], "]"}], 
          "=", 
          RowBox[{"Re", "[", 
           RowBox[{"H", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"hLen", "/", "2"}], ")"}], "+", "1"}], "]"}], "]"}], 
           "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"Nyquist", " ", "is", " ", "real"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HSym", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"hLen", "/", "2"}], ")"}], "+", "2"}], ";;", "hLen"}], 
            "]"}], "]"}], "=", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"Reverse", "[", 
            RowBox[{"H", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"(", 
                RowBox[{"hLen", "/", "2"}], ")"}]}], "]"}], "]"}], "]"}], 
           "]"}]}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"HSym", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"hLen", "+", "1"}], ")"}], "/", "2"}], ")"}], "+", 
              "1"}], ";;", "hLen"}], "]"}], "]"}], "=", 
          RowBox[{"Conjugate", "[", 
           RowBox[{"Reverse", "[", 
            RowBox[{"H", "[", 
             RowBox[{"[", 
              RowBox[{"2", ";;", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"hLen", "+", "1"}], ")"}], "/", "2"}], ")"}]}], 
              "]"}], "]"}], "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "HSym"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"DEPRECATED", " ", "FUNCTIONS"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sweepToIR", "[", 
     RowBox[{"sweepFilePath_", ",", 
      RowBox[{"fsFlag_", ":", "0"}], ",", 
      RowBox[{"preOnsetOpt_", ":", "\"\<short\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "outData", "}"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fsFlag", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", 
           RowBox[{"Pick", "[", 
            RowBox[{
             RowBox[{"sweepToIR2", "[", 
              RowBox[{"sweepFilePath", ",", "5", ",", "preOnsetOpt"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
             ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", 
           RowBox[{"sweepToIR2", "[", 
            RowBox[{"sweepFilePath", ",", "1", ",", "preOnsetOpt"}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "outData"}]}], "\[IndentingNewLine]", "]"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sweepToIR2", "[", 
     RowBox[{"sweepFilePath_", ",", 
      RowBox[{"numOuts_", ":", "3"}], ",", 
      RowBox[{"preOnsetOpt_", ":", "\"\<short\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rawData", ",", "numCh", ",", "numMics", ",", "fileLen", ",", "FFTLen",
         ",", "rawMicData", ",", "sweepSignal", ",", "triggerSignal", ",", 
        "triggerPositions", ",", "interSweepDelay", ",", "numSweeps", ",", 
        "micIRs", ",", "micOnsets", ",", "firstOnset", ",", "IRLen", ",", 
        "preOnsetDelay", ",", "IRList", ",", "startPos", ",", "endPos", ",", 
        "indxLen", ",", "Fs", ",", "backgroundNoiseList", ",", 
        "backgroundNoiseLen", ",", "availableBGNoiseLen", ",", "outData"}], 
       "}"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "sweepFilePath", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rawData", ",", "numCh"}], "}"}], "=", 
           RowBox[{"importAudio", "[", "sweepFilePath", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Fs", "=", 
           RowBox[{"getSamplingRate", "[", "sweepFilePath", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"numMics", "=", 
           RowBox[{"numCh", "-", "2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "Remaining", " ", "two", " ", "channels", " ", "are", " ", 
             "sweep", " ", "and", " ", "trigger", " ", "signal", " ", 
             "channels"}], ",", " ", 
            RowBox[{"respectively", "."}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"fileLen", " ", "=", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "rawData", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"FFTLen", " ", "=", " ", 
           RowBox[{"nextPowTwo", "[", "fileLen", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"rawMicData", "=", 
           RowBox[{"rawData", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "numMics"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sweepSignal", "=", 
           RowBox[{"rawData", "[", 
            RowBox[{"[", 
             RowBox[{"numCh", "-", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"triggerSignal", "=", 
           RowBox[{"rawData", "[", 
            RowBox[{"[", "numCh", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"triggerPositions", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"Round", "[", "triggerSignal", "]"}], ",", "1"}], "]"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"interSweepDelay", " ", "=", " ", 
           RowBox[{"Round", "[", 
            RowBox[{"Mean", "[", 
             RowBox[{"Differences", "[", "triggerPositions", "]"}], "]"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"numSweeps", "=", 
           RowBox[{"Length", "[", "triggerPositions", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"micIRs", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0.", ",", "numMics"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"micOnsets", " ", "=", " ", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0.", ",", "numMics"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"micIRs", "[", 
               RowBox[{"[", "ii", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"deconv", "[", 
               RowBox[{
                RowBox[{"PadRight", "[", 
                 RowBox[{
                  RowBox[{"rawMicData", "[", 
                   RowBox[{"[", "ii", "]"}], "]"}], ",", "FFTLen"}], "]"}], 
                ",", 
                RowBox[{"PadRight", "[", 
                 RowBox[{"sweepSignal", ",", "FFTLen"}], "]"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"micOnsets", "[", 
               RowBox[{"[", "ii", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"signalOnset", "[", 
               RowBox[{
                RowBox[{"micIRs", "[", 
                 RowBox[{"[", "ii", "]"}], "]"}], ",", 
                RowBox[{"\"\<Threshold\>\"", "\[Rule]", "10"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "preOnsetOpt", "\[IndentingNewLine]", ",", "\"\<short\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"firstOnset", " ", "=", " ", 
              RowBox[{"Min", "[", "micOnsets", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"preOnsetDelay", " ", "=", " ", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Round", "[", 
                 RowBox[{"0.004", " ", "Fs"}], "]"}], ",", 
                RowBox[{"firstOnset", "-", "1"}]}], "]"}]}], ";"}], 
            "\[IndentingNewLine]", ",", "\"\<natural\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"firstOnset", " ", "=", " ", 
              RowBox[{"Min", "[", "micOnsets", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"preOnsetDelay", "=", 
              RowBox[{"firstOnset", "-", 
               RowBox[{"triggerPositions", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], 
            "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "MessageDialog", "[", 
              "\"\<Invalid OPT specification. Aborting...\>\"", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"numSweeps", ">", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"IRLen", " ", "=", " ", "interSweepDelay"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"IRLen", " ", "=", " ", "FFTLen"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"backgroundNoiseLen", "=", "IRLen"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"backgroundNoiseList", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0.", ",", "backgroundNoiseLen"}], "]"}], ",", 
             "numMics"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"availableBGNoiseLen", "=", 
           RowBox[{"firstOnset", "-", "preOnsetDelay"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"availableBGNoiseLen", ">", "backgroundNoiseLen"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"availableBGNoiseLen", "=", "backgroundNoiseLen"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"backgroundNoiseList", "[", 
               RowBox[{"[", 
                RowBox[{"ii", ",", 
                 RowBox[{";;", "availableBGNoiseLen"}]}], "]"}], "]"}], " ", 
              "=", " ", 
              RowBox[{"micIRs", "[", 
               RowBox[{"[", 
                RowBox[{"ii", ",", 
                 RowBox[{";;", "availableBGNoiseLen"}]}], "]"}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"IRList", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"numMics", ",", "numSweeps"}], "}"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "numMics", " ", "rows", " ", "correspond", " ", "to", " ", "each", 
            " ", "of", " ", "the", " ", "recording", " ", 
            RowBox[{"points", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"startPos", " ", "=", " ", 
              RowBox[{
              "firstOnset", " ", "-", " ", "preOnsetDelay", " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"jj", "-", "1"}], ")"}], "IRLen"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"endPos", " ", "=", " ", 
              RowBox[{
              "startPos", " ", "+", " ", "IRLen", " ", "-", " ", "1"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"endPos", " ", ">", " ", "FFTLen"}], ",", 
               RowBox[{
                RowBox[{"endPos", " ", "=", " ", "FFTLen"}], ";"}]}], "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"indxLen", " ", "=", " ", 
              RowBox[{"endPos", "-", "startPos", "+", "1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"IRList", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", "jj"}], "]"}], "]"}], " ", "=", " ", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0.", ",", "IRLen"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"IRList", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", "jj", ",", 
                    RowBox[{"1", ";;", "indxLen"}]}], "]"}], "]"}], " ", "=", 
                 " ", 
                 RowBox[{"micIRs", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", 
                    RowBox[{"startPos", ";;", "endPos"}]}], "]"}], "]"}]}], 
                ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "1", ",", "numMics"}], "}"}]}], "]"}], 
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"jj", ",", "1", ",", "numSweeps"}], "}"}]}], "]"}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MessageDialog", "[", "\"\<Operation Canceled!\>\"", "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"IRList", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"firstOnset", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"preOnsetDelay", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"backgroundNoiseList", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Fs", "=", 
           RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "numOuts", "\[IndentingNewLine]", ",", "1", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", "IRList"}], ";"}], "\[IndentingNewLine]", 
         ",", "2", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", 
           RowBox[{"{", 
            RowBox[{"IRList", ",", "firstOnset"}], "}"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "3", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", 
           RowBox[{"{", 
            RowBox[{"IRList", ",", "firstOnset", ",", "preOnsetDelay"}], 
            "}"}]}], ";"}], "\[IndentingNewLine]", ",", "4", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", 
           RowBox[{"{", 
            RowBox[{
            "IRList", ",", "firstOnset", ",", "preOnsetDelay", ",", 
             "backgroundNoiseList"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
         ",", "5", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"outData", "=", 
           RowBox[{"{", 
            RowBox[{
            "IRList", ",", "firstOnset", ",", "preOnsetDelay", ",", 
             "backgroundNoiseList", ",", "Fs"}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "outData"}]}], "\[IndentingNewLine]", "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"minPhaseIR", "[", "inputIR_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "irLen", ",", "padIRLen", ",", "padIR", ",", "padRCeps", ",", "win", 
        ",", "padIRHalfLen", ",", "minPhasePadIR", ",", "minPhaseIR"}], "}"}],
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"irLen", "=", 
        RowBox[{"Length", "[", "inputIR", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"padIRLen", "=", 
        RowBox[{"nextPowTwo", "[", "irLen", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padIR", "=", 
        RowBox[{"PadRight", "[", 
         RowBox[{"inputIR", ",", "padIRLen"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padRCeps", "=", 
        RowBox[{"TFtoIR", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"IRtoTF", "[", "padIR", "]"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"win", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "padIRLen"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"padIRHalfLen", "=", 
        RowBox[{"padIRLen", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"win", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"win", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"padIRHalfLen", "-", "1"}]}], "]"}], "]"}], "=", "2"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"win", "[", 
         RowBox[{"[", "padIRHalfLen", "]"}], "]"}], "=", "1"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"minPhasePadIR", "=", 
        RowBox[{"TFtoIR", "[", 
         RowBox[{"Exp", "[", 
          RowBox[{"IRtoTF", "[", 
           RowBox[{"win", " ", "padRCeps"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"minPhaseIR", "=", 
        RowBox[{"minPhasePadIR", "[", 
         RowBox[{"[", 
          RowBox[{";;", "irLen"}], "]"}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.6964254067997217`*^9, {3.696426245240288*^9, 3.696426289308839*^9}, {
   3.69642640587595*^9, 3.696426452128778*^9}, {3.6964269747974367`*^9, 
   3.6964270325342197`*^9}, {3.696427065794364*^9, 3.696427087484063*^9}, {
   3.696428291447131*^9, 3.6964283605344276`*^9}, {3.696428977167259*^9, 
   3.696428982123331*^9}, {3.6964294557856092`*^9, 3.69642947791803*^9}, 
   3.696429508773425*^9, {3.696429636435956*^9, 3.6964297768217497`*^9}, {
   3.696431142207358*^9, 3.696431142836886*^9}, {3.6964349305567093`*^9, 
   3.696434931074234*^9}, {3.696436985091125*^9, 3.6964370418469477`*^9}, {
   3.6964371354019547`*^9, 3.696437261744685*^9}, {3.696437338237109*^9, 
   3.696437425250938*^9}, {3.696476882260889*^9, 3.696476887559086*^9}, {
   3.697302974453986*^9, 3.697302975396779*^9}, {3.6973030441953697`*^9, 
   3.69730311804261*^9}, {3.697303682104973*^9, 3.697303699367806*^9}, {
   3.6973037592857857`*^9, 3.697303786740789*^9}, {3.697303877339334*^9, 
   3.697303922215788*^9}, {3.697303969999442*^9, 3.697304011296136*^9}, {
   3.697304045406611*^9, 3.6973040772554693`*^9}, {3.697304109429257*^9, 
   3.697304262492527*^9}, {3.697304432539358*^9, 3.697304443900227*^9}, {
   3.6973046269969397`*^9, 3.697304679943791*^9}, {3.697305334035898*^9, 
   3.69730533627907*^9}, {3.697305766636776*^9, 3.6973057764639883`*^9}, {
   3.697305832254943*^9, 3.6973058991411543`*^9}, {3.6973101075029488`*^9, 
   3.697310112620408*^9}, {3.697310144565506*^9, 3.697310174929572*^9}, {
   3.697310317881916*^9, 3.697310368493416*^9}, {3.6973105234265614`*^9, 
   3.697310586346423*^9}, {3.697310917907619*^9, 3.697310921570005*^9}, {
   3.697311096092177*^9, 3.6973110979478903`*^9}, {3.69731114064711*^9, 
   3.6973111416141787`*^9}, {3.697311173226907*^9, 3.697311230873596*^9}, {
   3.697311466542942*^9, 3.6973114929110947`*^9}, {3.6973120367705307`*^9, 
   3.6973120741759863`*^9}, {3.697312119074712*^9, 3.6973121350605593`*^9}, 
   3.697322869409721*^9, {3.697322950293067*^9, 3.697322969845133*^9}, {
   3.6973230009818974`*^9, 3.697323039780324*^9}, {3.697323124426083*^9, 
   3.69732316528712*^9}, 3.697323339040353*^9, 3.697323408007764*^9, {
   3.6973234501424427`*^9, 3.697323592125091*^9}, 3.697323678454233*^9, {
   3.697323718366996*^9, 3.697323735193142*^9}, {3.69732381642027*^9, 
   3.697323824154003*^9}, {3.697323985919621*^9, 3.697323985960483*^9}, {
   3.69732430056523*^9, 3.697324367664188*^9}, {3.697324678605338*^9, 
   3.697324737755063*^9}, {3.697324805988603*^9, 3.697324807100321*^9}, {
   3.6973252518513193`*^9, 3.697325308739718*^9}, {3.697325359620104*^9, 
   3.697325361170497*^9}, {3.6973254415105457`*^9, 3.6973254549028387`*^9}, {
   3.697325502936934*^9, 3.697325507856882*^9}, {3.697325874007584*^9, 
   3.6973259181743526`*^9}, {3.697326040693643*^9, 3.697326119787737*^9}, {
   3.6973261700052433`*^9, 3.697326279361507*^9}, {3.69732671455552*^9, 
   3.697326721896084*^9}, {3.697327142316534*^9, 3.697327154973999*^9}, {
   3.697327434831151*^9, 3.697327443866253*^9}, {3.6973274755630417`*^9, 
   3.697327501772771*^9}, {3.697328068390411*^9, 3.697328071238412*^9}, {
   3.697328558424944*^9, 3.697328573707615*^9}, {3.697328649412703*^9, 
   3.697328718983968*^9}, {3.697331287487541*^9, 3.697331372948575*^9}, {
   3.69738064061401*^9, 3.697380647167285*^9}, 3.697485883971064*^9, 
   3.69755096966255*^9, {3.697552510827012*^9, 3.697552552526146*^9}, {
   3.697562940453828*^9, 3.697562966621739*^9}, 3.697566852824074*^9, {
   3.69756916735498*^9, 3.697569204633974*^9}, {3.69756923515276*^9, 
   3.6975692380548573`*^9}, {3.6975693331563387`*^9, 3.697569363635008*^9}, {
   3.7008023747310543`*^9, 3.700802374832141*^9}, {3.7008025487849617`*^9, 
   3.700802566454664*^9}, {3.7008028435291023`*^9, 3.70080284483924*^9}, {
   3.700802992694543*^9, 3.700802994221753*^9}, {3.700862548471241*^9, 
   3.7008625495106697`*^9}, {3.7008630036857*^9, 3.700863004163802*^9}, {
   3.7108806886277027`*^9, 3.71088070017295*^9}, {3.710979601493927*^9, 
   3.710979602345035*^9}, 3.710979650075598*^9, {3.710979741379221*^9, 
   3.710979741759816*^9}, {3.710980348565116*^9, 3.7109803494042807`*^9}, {
   3.7109820844371033`*^9, 3.710982151952886*^9}, {3.710982254478057*^9, 
   3.710982299833465*^9}, {3.7109823707843018`*^9, 3.710982378251789*^9}, {
   3.7109825877219563`*^9, 3.710982594597763*^9}, {3.711281729040804*^9, 
   3.711281734263935*^9}, {3.711282050081573*^9, 3.711282104437627*^9}, {
   3.711282159066339*^9, 3.711282208022943*^9}, {3.711282245473814*^9, 
   3.711282438142296*^9}, {3.711282905915585*^9, 3.711282906031768*^9}, {
   3.711283181572776*^9, 3.71128320993556*^9}, {3.7112832434086637`*^9, 
   3.711283358496161*^9}, {3.71128339073341*^9, 3.7112833911379004`*^9}, {
   3.711283450548318*^9, 3.711283487735177*^9}, 3.711283542929722*^9, 
   3.711283587957405*^9, {3.711283888885992*^9, 3.711283917472127*^9}, {
   3.725494141751453*^9, 3.725494144787938*^9}, 3.725499382461955*^9, {
   3.730643426522358*^9, 3.730643428824481*^9}, {3.730643696322856*^9, 
   3.730643722350617*^9}, {3.730665297484737*^9, 3.730665335729488*^9}, 
   3.730665538045487*^9, {3.730666858419088*^9, 3.730666927476688*^9}, 
   3.730667056526393*^9, {3.740170428781705*^9, 3.7401704577925587`*^9}, {
   3.740170522600808*^9, 3.740170529888485*^9}, {3.7401712073608513`*^9, 
   3.740171241394766*^9}, {3.740171354381405*^9, 3.740171359988839*^9}, {
   3.7401714020349417`*^9, 3.7401714505862017`*^9}, {3.7401714908963203`*^9, 
   3.740171515448062*^9}, {3.740180568107717*^9, 3.74018066037752*^9}, {
   3.740246500249729*^9, 3.740246518158349*^9}, {3.740246759735137*^9, 
   3.740246779605422*^9}, {3.740247065802297*^9, 3.740247072352274*^9}, {
   3.7402479173547583`*^9, 3.740247922036078*^9}, {3.740248024877022*^9, 
   3.740248047943358*^9}, 3.740248378946838*^9, {3.740248581084365*^9, 
   3.740248582920545*^9}, {3.743277377156024*^9, 3.743277378095203*^9}, {
   3.743278530450495*^9, 3.7432785539783573`*^9}, {3.7432786052446404`*^9, 
   3.743278631088324*^9}, {3.743279755597451*^9, 3.7432797581547117`*^9}, {
   3.7432797911886683`*^9, 3.7432798437875023`*^9}, {3.7432798910278797`*^9, 
   3.743279895908081*^9}, {3.7432799309063396`*^9, 3.74327999373451*^9}, {
   3.743280039526237*^9, 3.7432801680073137`*^9}, {3.743280210533908*^9, 
   3.7432802347597523`*^9}, {3.743290102302313*^9, 3.743290149985991*^9}, {
   3.7432902593794403`*^9, 3.743290271369589*^9}, {3.7457763828925447`*^9, 
   3.745776383479746*^9}, {3.746990906803877*^9, 3.74699096854167*^9}, {
   3.7469914552436943`*^9, 3.746991456539029*^9}, {3.7469917337780447`*^9, 
   3.746991736251814*^9}, {3.747590829763062*^9, 3.747590843795774*^9}, {
   3.750613153264208*^9, 3.7506131560460863`*^9}, {3.750613194677129*^9, 
   3.750613202255218*^9}, {3.750613238934094*^9, 3.750613343437975*^9}, {
   3.750613382844851*^9, 3.750613574655798*^9}, {3.750613612070664*^9, 
   3.750613719726142*^9}, {3.750613758836535*^9, 3.750613997838822*^9}, {
   3.75061412402944*^9, 3.750614129369547*^9}, {3.750614280278783*^9, 
   3.7506142880313263`*^9}, {3.750614319883443*^9, 3.750614355822166*^9}, {
   3.750614454164052*^9, 3.750614456595006*^9}, {3.7506767076450644`*^9, 
   3.750676726628331*^9}, {3.7506768997056837`*^9, 3.7506769320188923`*^9}, {
   3.7506769632209663`*^9, 3.75067699012766*^9}, {3.750677748384227*^9, 
   3.750677798248869*^9}, {3.75067783522997*^9, 3.7506778638274803`*^9}, {
   3.75067801752978*^9, 3.750678018272132*^9}, {3.7506781065294523`*^9, 
   3.750678112320957*^9}, {3.7506781423812857`*^9, 3.750678176769641*^9}, {
   3.750678606761959*^9, 3.750678608269083*^9}, {3.750678649331526*^9, 
   3.750678654074901*^9}, {3.750679062795208*^9, 3.750679075733479*^9}, {
   3.750679125946783*^9, 3.750679126402115*^9}, {3.750681068799309*^9, 
   3.75068108553552*^9}, {3.750681172659169*^9, 3.750681184210916*^9}, {
   3.75068122161535*^9, 3.750681224310608*^9}, {3.750681325536892*^9, 
   3.75068132589491*^9}, {3.750682609012808*^9, 3.7506826194364223`*^9}, {
   3.750683284629099*^9, 3.750683285420494*^9}, {3.750683336716651*^9, 
   3.750683337204815*^9}, {3.752610839097821*^9, 3.752610858557721*^9}, {
   3.752864369589055*^9, 3.752864457002788*^9}, {3.75286451283298*^9, 
   3.752864720617793*^9}, {3.7528647528296957`*^9, 3.752864850491646*^9}, {
   3.75286503278369*^9, 3.752865067410635*^9}, {3.7560535400459023`*^9, 
   3.7560536369074707`*^9}, 3.7597436601056223`*^9, {3.759743743199274*^9, 
   3.759743836090808*^9}, {3.7597440767885857`*^9, 3.759744077105986*^9}, {
   3.765839295271883*^9, 3.7658393952011633`*^9}, {3.76584531375529*^9, 
   3.765845351276671*^9}, {3.765846340494928*^9, 3.765846522433868*^9}, {
   3.767529490146439*^9, 3.767529490527382*^9}, {3.767529538790599*^9, 
   3.767529544604847*^9}, {3.810427053272163*^9, 3.8104270828527937`*^9}, {
   3.8104271369711647`*^9, 3.810427242141094*^9}, {3.810427279934063*^9, 
   3.810427328558104*^9}, {3.8104273597169724`*^9, 3.810427449463551*^9}, {
   3.810427488621455*^9, 3.810427614980276*^9}, {3.810427731259644*^9, 
   3.8104277378578167`*^9}, 3.810428254139511*^9, {3.8104282902147017`*^9, 
   3.81042829284258*^9}, {3.81042912471383*^9, 3.8104292602267227`*^9}, {
   3.810429315059026*^9, 3.810429320834203*^9}, {3.810429358977314*^9, 
   3.810429366274331*^9}, {3.810429409578082*^9, 3.810429415330119*^9}, {
   3.810429458583473*^9, 3.810429493945122*^9}, {3.810429626024973*^9, 
   3.810429722803179*^9}, {3.810429752817326*^9, 3.81042978817456*^9}, {
   3.810429861114718*^9, 3.810429873475172*^9}, {3.8104299114873047`*^9, 
   3.810429978666829*^9}, {3.810430129565394*^9, 3.8104301730943403`*^9}, {
   3.810430405852818*^9, 3.8104304536614923`*^9}, {3.810430485585125*^9, 
   3.810430530258111*^9}, {3.810430609925188*^9, 3.8104306271504793`*^9}, {
   3.810430676556678*^9, 3.810430684210545*^9}, {3.8104308078342943`*^9, 
   3.8104308707228203`*^9}, {3.8104309256808977`*^9, 3.81043093291969*^9}, {
   3.8104309734107313`*^9, 3.810431034611189*^9}, {3.81043114997519*^9, 
   3.810431190546062*^9}, {3.810431390376824*^9, 3.810431403271152*^9}, {
   3.8104315133721733`*^9, 3.8104315460653543`*^9}, {3.810431632764103*^9, 
   3.8104316508723288`*^9}, 3.810431884712111*^9, {3.810432169253186*^9, 
   3.810432254073941*^9}, {3.810432450351179*^9, 3.810432458891692*^9}, {
   3.810432515979851*^9, 3.810432519877388*^9}, {3.8104325992668858`*^9, 
   3.8104326474119062`*^9}, {3.8104628821505527`*^9, 3.810462886873413*^9}, {
   3.810463310415073*^9, 3.810463338578052*^9}, {3.810466889021833*^9, 
   3.8104669212644653`*^9}, {3.810509516781872*^9, 3.810509649524181*^9}, {
   3.8105097034715633`*^9, 3.81050975207821*^9}, {3.8105098020717993`*^9, 
   3.8105098746936197`*^9}, {3.810511374061656*^9, 3.810511392098283*^9}, {
   3.810511529492962*^9, 3.8105115414868717`*^9}, {3.810511604991826*^9, 
   3.810511615925839*^9}, {3.810511711814683*^9, 3.810511724627407*^9}, {
   3.810511850520482*^9, 3.810511858474324*^9}, {3.810547323460594*^9, 
   3.810547324472225*^9}, {3.810548358092197*^9, 3.8105483838266277`*^9}, {
   3.81054866380368*^9, 3.810548664372929*^9}, 3.810548840862136*^9, {
   3.8106542646905947`*^9, 3.8106544307177143`*^9}, {3.810654477798892*^9, 
   3.810654564456009*^9}, {3.8106591758602257`*^9, 3.810659177842029*^9}, {
   3.810659282348537*^9, 3.810659305742317*^9}, {3.81065941931649*^9, 
   3.810659422178658*^9}, {3.813182648780472*^9, 3.813182648927555*^9}, {
   3.813182801432876*^9, 3.813182833302299*^9}, {3.813182876369521*^9, 
   3.813183108697055*^9}, {3.813183169828557*^9, 3.813183198279558*^9}, {
   3.813183256118907*^9, 3.813183280842708*^9}, {3.81324660039614*^9, 
   3.813246727888623*^9}, {3.813246764206957*^9, 3.8132468050457087`*^9}, {
   3.813246930865407*^9, 3.813246952837184*^9}, {3.813247023358965*^9, 
   3.813247069039198*^9}, {3.8339684405185947`*^9, 3.8339684468717203`*^9}, {
   3.8339686419163933`*^9, 3.833968679895726*^9}, 3.833968719896986*^9, {
   3.83396875643509*^9, 3.833968767253553*^9}, {3.833968825610373*^9, 
   3.833968900944228*^9}, {3.833968934548665*^9, 3.833969019490439*^9}, {
   3.833969050010723*^9, 3.8339690628649282`*^9}, {3.8339691406985598`*^9, 
   3.8339691805809402`*^9}, {3.834367367697722*^9, 3.834367382038795*^9}, {
   3.834368362486456*^9, 3.8343683662694807`*^9}, {3.834401362004497*^9, 
   3.8344013942366867`*^9}, {3.834401592005169*^9, 3.8344016292334003`*^9}, {
   3.834402841169778*^9, 3.834402965196199*^9}, {3.8344030339438753`*^9, 
   3.83440305867066*^9}, {3.834405653849997*^9, 3.834405685548848*^9}, {
   3.8344057183457108`*^9, 3.8344057337212*^9}, {3.834406796475346*^9, 
   3.8344068016466208`*^9}, {3.834407327148201*^9, 3.834407407076684*^9}, {
   3.834407942560193*^9, 3.8344079667296047`*^9}, {3.834408266330106*^9, 
   3.834408267473071*^9}, {3.834411314522687*^9, 3.834411405862296*^9}, {
   3.834435867983655*^9, 3.834435898303011*^9}, {3.834436115013578*^9, 
   3.834436121304948*^9}, {3.834436163043589*^9, 3.834436213938929*^9}, {
   3.834436334214057*^9, 3.8344363373163757`*^9}, {3.8344867021137657`*^9, 
   3.83448670924844*^9}, 3.834488928243401*^9, {3.834489255712064*^9, 
   3.83448927671036*^9}, {3.8344893094900837`*^9, 3.834489387936607*^9}, {
   3.834489463490408*^9, 3.834489466102642*^9}, {3.835028108299121*^9, 
   3.8350281219131804`*^9}, {3.835030182366837*^9, 3.835030186955476*^9}, {
   3.837280275679018*^9, 3.83728031759603*^9}, {3.8372803664715223`*^9, 
   3.837280466087544*^9}, {3.837280694530916*^9, 3.8372807278008547`*^9}, {
   3.8372808612880774`*^9, 3.837280881979722*^9}, {3.837281036462596*^9, 
   3.8372810813985853`*^9}, {3.837281233127921*^9, 3.8372812766775703`*^9}, {
   3.837281410954047*^9, 3.8372814543959312`*^9}, {3.837296368527791*^9, 
   3.837296374494851*^9}, {3.837296425624633*^9, 3.8372964842882957`*^9}, {
   3.837296527248426*^9, 3.8372965400851927`*^9}, {3.8372965748306637`*^9, 
   3.837296576295376*^9}, {3.837384221295444*^9, 3.8373842245687943`*^9}, {
   3.837384705595839*^9, 3.837384721389225*^9}, {3.837384964048147*^9, 
   3.837385003000049*^9}, 3.837385043476531*^9, {3.837385301162086*^9, 
   3.837385348110214*^9}, {3.837385415806777*^9, 3.83738541829956*^9}, {
   3.8373856072739687`*^9, 3.83738568928694*^9}, {3.8373857683717937`*^9, 
   3.837385828732036*^9}, {3.8373860085072317`*^9, 3.837386022289791*^9}, {
   3.837386107843622*^9, 3.837386138566311*^9}, {3.837386201480721*^9, 
   3.837386233136899*^9}, {3.837386438610165*^9, 3.837386451700526*^9}, {
   3.837386489221073*^9, 3.837386542410995*^9}, {3.837386578536744*^9, 
   3.837386685261498*^9}, {3.837387074049371*^9, 3.837387194963834*^9}, 
   3.8373872374095907`*^9, {3.837387269958992*^9, 3.837387389567724*^9}, {
   3.837387421999617*^9, 3.837387501276917*^9}, {3.837387669205282*^9, 
   3.837387694827829*^9}, {3.837387828895505*^9, 3.8373878379419413`*^9}, {
   3.837388009577108*^9, 3.837388077208001*^9}, {3.837421485531608*^9, 
   3.837421576252161*^9}, {3.8374216187568207`*^9, 3.837421619652401*^9}, {
   3.8374216725613194`*^9, 3.8374216925494423`*^9}, {3.837422734726131*^9, 
   3.837422735052555*^9}, {3.837422862630718*^9, 3.837422862941532*^9}, {
   3.837422894380397*^9, 3.837423016536654*^9}, {3.8374231064688396`*^9, 
   3.837423132891596*^9}, {3.837545892784092*^9, 3.837545957381126*^9}, {
   3.8375945136916637`*^9, 3.83759461732342*^9}, {3.837594994004978*^9, 
   3.83759503725734*^9}, {3.8375954054932137`*^9, 3.837595455246171*^9}, 
   3.837595545184287*^9, {3.837595587919883*^9, 3.8375956245905943`*^9}, {
   3.837595670029059*^9, 3.8375956884684553`*^9}, {3.837595722843986*^9, 
   3.837595768718313*^9}, {3.837595869026277*^9, 3.8375958743883963`*^9}, {
   3.8375959256842613`*^9, 3.8375959982619143`*^9}, {3.837596137925725*^9, 
   3.83759617284231*^9}, {3.8375962037086077`*^9, 3.837596246927641*^9}, {
   3.83759627973804*^9, 3.8375963923043947`*^9}, {3.837596624471003*^9, 
   3.83759671385532*^9}, {3.837596768867244*^9, 3.837596792324316*^9}, {
   3.837596985654017*^9, 3.837597062620371*^9}, {3.837597204820243*^9, 
   3.837597231939898*^9}, {3.837600669492547*^9, 3.837600720479937*^9}, {
   3.837600896848693*^9, 3.837600911823608*^9}, {3.837600995215966*^9, 
   3.8376010084401712`*^9}, {3.837601114610567*^9, 3.837601157843775*^9}, {
   3.837601232851337*^9, 3.837601254801413*^9}, {3.837601289426097*^9, 
   3.837601330730927*^9}, {3.8376013853677692`*^9, 3.837601443992051*^9}, {
   3.8376022271893167`*^9, 3.8376022300985727`*^9}, {3.837602397565269*^9, 
   3.837602400003821*^9}, 3.837602443102113*^9, {3.837602473107635*^9, 
   3.837602476117963*^9}, {3.837602530791793*^9, 3.837602532462165*^9}, {
   3.837602627119776*^9, 3.837602628429994*^9}, {3.8376026623676987`*^9, 
   3.837602668758442*^9}, {3.837602699165187*^9, 3.837602714038197*^9}, {
   3.837602765597535*^9, 3.8376028406589622`*^9}, {3.837602871614903*^9, 
   3.837602874362158*^9}, {3.837602922538878*^9, 3.837602938758977*^9}, {
   3.837602971924013*^9, 3.8376029810976152`*^9}, {3.8376030619903917`*^9, 
   3.837603126093557*^9}, {3.837603173079677*^9, 3.83760325003191*^9}, {
   3.837603282486413*^9, 3.837603308742979*^9}, {3.837603353227811*^9, 
   3.8376034193889503`*^9}, {3.837603480836097*^9, 3.837603706220743*^9}, {
   3.8376037710914383`*^9, 3.8376038324496202`*^9}, 3.837605632794971*^9, {
   3.83761378026792*^9, 3.837613889895405*^9}, {3.8376139282636223`*^9, 
   3.83761403873801*^9}, {3.837614477636745*^9, 3.8376144931430483`*^9}, {
   3.8376145493553*^9, 3.837614643009465*^9}, {3.837614690549616*^9, 
   3.837614727263485*^9}, {3.837648553622026*^9, 3.837648554188608*^9}, {
   3.8376486175280933`*^9, 3.8376486222413483`*^9}, {3.8376486539998617`*^9, 
   3.8376486547508917`*^9}, {3.837653643058066*^9, 3.837653687282613*^9}, 
   3.837654590275742*^9, {3.8379832014163437`*^9, 3.8379832164383593`*^9}, {
   3.8385135408981657`*^9, 3.838513578938855*^9}, {3.838513619253191*^9, 
   3.838513658302195*^9}, {3.838513701954953*^9, 3.838513719616561*^9}, {
   3.8385534870265713`*^9, 3.838553517777534*^9}, {3.838580264373505*^9, 
   3.8385802750048122`*^9}, {3.841566073466289*^9, 3.8415660741288433`*^9}, {
   3.841566215328479*^9, 3.8415662158807096`*^9}, {3.841568766100852*^9, 
   3.8415687907156677`*^9}, {3.84156890089755*^9, 3.841568969997149*^9}, {
   3.841569092674654*^9, 3.841569115916171*^9}, {3.8415691664806623`*^9, 
   3.841569175401149*^9}, {3.841569331468306*^9, 3.8415693432246437`*^9}, {
   3.8415701179961348`*^9, 3.841570120455179*^9}, {3.841571506345955*^9, 
   3.841571665454836*^9}, {3.841571712275238*^9, 3.841571824765367*^9}, {
   3.841571865026005*^9, 3.841571884800768*^9}, {3.841572022220866*^9, 
   3.841572107138268*^9}, {3.841572274235387*^9, 3.841572279521975*^9}, {
   3.841598223000931*^9, 3.841598364579178*^9}, {3.8415983949581413`*^9, 
   3.841598404723703*^9}, {3.844106442692705*^9, 3.844106443279355*^9}, {
   3.844205254500043*^9, 3.84420527150723*^9}, {3.8442056410401506`*^9, 
   3.8442056903878937`*^9}, {3.844206013474434*^9, 3.84420613356116*^9}, {
   3.84420621730089*^9, 3.8442062596441927`*^9}, {3.8442078029115973`*^9, 
   3.844207859150896*^9}, {3.8442079382829437`*^9, 3.8442079586052103`*^9}, {
   3.844208081364181*^9, 3.844208130230239*^9}, {3.844208197589624*^9, 
   3.844208211912642*^9}, {3.844208244846527*^9, 3.844208256123123*^9}, {
   3.844208404401411*^9, 3.8442084119699383`*^9}, {3.844208470074686*^9, 
   3.8442085641715527`*^9}, {3.844208983327592*^9, 3.844209012246045*^9}, {
   3.8442100541375513`*^9, 3.8442100645354652`*^9}, {3.844210139484833*^9, 
   3.844210242494076*^9}, {3.8442105619452477`*^9, 3.844210577571196*^9}, {
   3.8442111851599092`*^9, 3.844211202282353*^9}, {3.844217703420189*^9, 
   3.844217712644814*^9}, {3.844219128064539*^9, 3.844219237034134*^9}, {
   3.844219527515143*^9, 3.844219533441605*^9}, {3.844219591588477*^9, 
   3.844219619654728*^9}, {3.844220018251045*^9, 3.844220018357366*^9}, {
   3.8442211701026793`*^9, 3.844221170143959*^9}, {3.844245576752821*^9, 
   3.844245633136862*^9}, {3.8442457324147253`*^9, 3.844245753298726*^9}, {
   3.844245933779871*^9, 3.8442459437461147`*^9}, {3.844246244444746*^9, 
   3.8442463089787493`*^9}, {3.844246350224661*^9, 3.844246395053987*^9}, {
   3.844247324077138*^9, 3.84424733330231*^9}, {3.844247397588153*^9, 
   3.844247398531506*^9}, {3.844247494992302*^9, 3.8442475841856117`*^9}, {
   3.844247646633202*^9, 3.844247661538623*^9}, {3.8442478138792553`*^9, 
   3.844247827589656*^9}, {3.8442491206010437`*^9, 3.844249188801909*^9}, {
   3.844249223976829*^9, 3.844249224280438*^9}, {3.844249677197351*^9, 
   3.8442496842896442`*^9}, {3.844250595009725*^9, 3.84425062184933*^9}, {
   3.844251423178975*^9, 3.8442514240510817`*^9}, {3.844251886376549*^9, 
   3.8442521045779*^9}, 3.8442521495955753`*^9, {3.844252186233295*^9, 
   3.84425220463033*^9}, {3.844252787637553*^9, 3.84425279504524*^9}, {
   3.8442528261535*^9, 3.844252826785227*^9}, {3.8442544620845213`*^9, 
   3.844254469661677*^9}, {3.844255184128208*^9, 
   3.844255184188607*^9}},ExpressionUUID->"c183ef61-fc0b-44b0-949b-\
50c544207a54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End the `Private context", "Section",ExpressionUUID->"0de32096-606b-4cae-bb0b-b3edf5cf1dc6"],

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Input",ExpressionUUID->"e8b95233-aef3-4c13-b826-1a71099026dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End the package context", "Section",ExpressionUUID->"654c1ecb-c242-4239-891d-f4bf8d7d6f08"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Input",ExpressionUUID->"aac6bd49-7e85-4e7f-a3d0-f1a840b3db7b"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1440, 851},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{"dsp"}},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Code"], PageWidth :> WindowWidth, AutoIndent -> Automatic, 
    AutoSpacing -> True, LineBreakWithin -> Automatic, LineIndent -> 1, 
    LinebreakAdjustments -> {0.85, 2, 10, 0, 1}], 
   Cell[
    StyleData["Input"], InitializationCell -> True]}, Visible -> False, 
  FrontEndVersion -> "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e5e46e16-aea0-4513-85e2-b39baf810ce8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 2, 98, "Title",ExpressionUUID->"1ca595f7-a740-41d1-8dfc-2047e2c71c21"],
Cell[758, 26, 1828, 40, 725, "Text",ExpressionUUID->"dca19e92-ab53-460e-aff2-921c62d34d07"],
Cell[CellGroupData[{
Cell[2611, 70, 91, 0, 67, "Section",ExpressionUUID->"dd1159f4-99cf-44db-8353-e4b5d7a1890a"],
Cell[2705, 72, 405, 9, 46, "Input",ExpressionUUID->"71729209-1ef9-4b73-8904-8ce8c08cb755"],
Cell[CellGroupData[{
Cell[3135, 85, 116, 0, 54, "Subsection",ExpressionUUID->"73d3d877-ffce-4a6d-bbf8-2b74b9a419c4"],
Cell[3254, 87, 31293, 527, 4100, "Input",ExpressionUUID->"307a3671-e91d-4952-9cdc-4fed5cf9a742"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34596, 620, 100, 0, 67, "Section",ExpressionUUID->"b0cf2bd9-b3e0-40b9-a309-0b141bf1a237"],
Cell[34699, 622, 253, 5, 46, "Input",ExpressionUUID->"713d542c-4ab3-4ce7-b436-007adbaf716e"],
Cell[CellGroupData[{
Cell[34977, 631, 97, 0, 54, "Subsection",ExpressionUUID->"75880e96-35c6-446a-a416-0c90d35f9bbc"],
Cell[35077, 633, 159849, 3702, 17994, "Input",ExpressionUUID->"c183ef61-fc0b-44b0-949b-50c544207a54"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194975, 4341, 98, 0, 67, "Section",ExpressionUUID->"0de32096-606b-4cae-bb0b-b3edf5cf1dc6"],
Cell[195076, 4343, 106, 1, 46, "Input",ExpressionUUID->"e8b95233-aef3-4c13-b826-1a71099026dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195219, 4349, 97, 0, 67, "Section",ExpressionUUID->"654c1ecb-c242-4239-891d-f4bf8d7d6f08"],
Cell[195319, 4351, 113, 1, 46, "Input",ExpressionUUID->"aac6bd49-7e85-4e7f-a3d0-f1a840b3db7b"]
}, Open  ]]
}, Open  ]]
}
]
*)

