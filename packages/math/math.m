(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["math`"]


listDifferentiate::usage=
"listDifferentiate[listData] computes the numerical derivative of listData using a central difference scheme, except at the end points where either a forward or backward difference scheme is used as appropriate. listData must be a two-dimensional list of data where the first dimension contains data corresponding to the independent variable and the other to the dependent variable." 

listIntegrate::usage=
"listIntegrate[listData] computes the numerical integral of listData using the trapezoidal rule. listData must be a two-dimensional list of data where the first dimension contains data corresponding to the independent variable and the other to the dependent variable." 

logMean::usage=
"logMean[f,df,Q] computes the logarithmically-weighted mean of the list Q given f and df, where f is a list of the same length as Q containing the values at which the corresponding values of Q are specified, and df is the average separation between the values in f. Typically, f is monotonically increasing with its values having a uniform separation df."

logSTD::usage=
"logSTD[f,df,Q] computes the logarithmically-weighted standard deviation of the list Q given f and df, where f is a list of the same length as Q containing the values at which the corresponding values of Q are specified, and df is the average separation between the values in f. Typically, f is monotonically increasing with its values having a uniform separation df."


Begin["`Private`"]


listDifferentiate[listData_]:=Module[{xData,yData,xDataShiftLeft,yDataShiftLeft,listDataLen,outputData},
xData = listData[[1]];
yData = listData[[2]];
xDataShiftLeft = Drop[RotateLeft[xData,2],-2];
yDataShiftLeft = Drop[RotateLeft[yData,2],-2];
listDataLen = Length[xData];
outputData = ConstantArray[0,listDataLen];
outputData[[1]]=N[(yData[[2]]-yData[[1]])/(xData[[2]]-xData[[1]])];
outputData[[2;;listDataLen-1]]=N[(yDataShiftLeft-Drop[yData,-2])/(xDataShiftLeft-Drop[xData,-2])];
outputData[[listDataLen]]=N[(yData[[listDataLen]]-yData[[listDataLen-1]])/(xData[[listDataLen]]-xData[[listDataLen-1]])];
outputData
]

listIntegrate[listdata_]:=Module[{xdata,ydata,xdataShift,ydataShift,totalIntegral},
xdata = listdata[[1]];
ydata = listdata[[2]];
xdataShift = Drop[RotateLeft[xdata,1],-1];
ydataShift = Drop[RotateLeft[ydata,1],-1];
totalIntegral=N[Total[((Drop[ydata,-1]+ydataShift)/2) (xdataShift-Drop[xdata,-1])]]
]

logMean[f_,df_,Q_]:=Module[{W},
Total[Q/f]/Total[1/f]
]

logSTD[f_,df_,Q_]:=Module[{W,Qbar},
Qbar = logMean[f,df,Q];
Sqrt[Total[((Q-Qbar)/f)^2]/Total[1/f]]
]


End[]


EndPackage[]
